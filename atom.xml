<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yatsov的博客</title>
  
  <subtitle>学习-沉淀-提高</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yatsov.github.io/"/>
  <updated>2018-04-21T11:07:14.540Z</updated>
  <id>http://yatsov.github.io/</id>
  
  <author>
    <name>yatsov</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>翻译 如何居中</title>
    <link href="http://yatsov.github.io/CSS/%E7%BF%BB%E8%AF%91-%E5%A6%82%E4%BD%95%E5%B1%85%E4%B8%AD.html"/>
    <id>http://yatsov.github.io/CSS/翻译-如何居中.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T11:07:14.540Z</updated>
    
    <content type="html"><![CDATA[<p> 翻译 如何居中<br><a id="more"></a></p><blockquote><p>对这篇文章的翻译<a href="https://css-tricks.com/centering-css-complete-guide/" target="_blank" rel="noopener">https://css-tricks.com/centering-css-complete-guide/</a></p></blockquote><h2 id="水平居中"><a href="#水平居中" class="headerlink" title="水平居中"></a>水平居中</h2><h3 id="内联元素？文字或者链接"><a href="#内联元素？文字或者链接" class="headerlink" title="内联元素？文字或者链接?"></a>内联元素？文字或者链接?</h3><p>在块级元素内你可以将内联元素水平居中通过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.center-children &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/img/2/1.png" alt="水平居中"></p><p>这些在inline, inline-block, inline-table, inline-flex中起作用</p><h3 id="块级元素居中"><a href="#块级元素居中" class="headerlink" title="块级元素居中"></a>块级元素居中</h3><p>对于块级元素你可以设置 margin-left 和 margin-right为auto(注意要有宽度，没有宽度的话会占满全部空间)一般用法为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.center-me &#123;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/img/2/2.png" alt="水平居中"></p><p>对于父节点和本身来说宽度没有要求。<br>如果是float居中一种方案就是使用绝对定位之后left:50%然后再用margin:-图片的宽度的一半将其拉回。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        div&#123;</span><br><span class="line">            width: auto;height: 100px;background-color: orange;</span><br><span class="line">        &#125;</span><br><span class="line">        img&#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            position: absolute;left: 50%;margin-left: -100px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div style=&quot;&quot;&gt;</span><br><span class="line">    &lt;img src=&quot;3.png&quot; style=&quot;&quot; width=&quot;200&quot; height=&quot;100&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="多个块级元素"><a href="#多个块级元素" class="headerlink" title="多个块级元素?"></a>多个块级元素?</h3><p>如果您有两个或更多的块级元素需要在一行中水平居中，那么您可能会更好地使其成为不同的显示类型。<br>以下是使它们成为内联块的示例以及flexbox的示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/*内联居中 */</span><br><span class="line">.inline-block-center &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">/* flex居中 */</span><br><span class="line">.flex-center &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设你还有多个块级元素从上向下叠加，那么使用margin技术居中也是可以的。</p><h1 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h1><h2 id="内联元素"><a href="#内联元素" class="headerlink" title="内联元素?"></a>内联元素?</h2><h3 id="一行"><a href="#一行" class="headerlink" title="一行?"></a>一行?</h3><p>有时候一行元素可以垂直居中，因为他们的上下padding一样。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.link &#123;</span><br><span class="line">  padding-top: 30px;</span><br><span class="line">  padding-bottom: 30px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>如果padding不是选项，并且这个文字<strong>不会换行</strong>，那么您可以考虑一下line-height和高度相等。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.center-text-trick &#123;</span><br><span class="line">  height: 100px;</span><br><span class="line">  line-height: 100px;</span><br><span class="line">  white-space: nowrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="多行？"><a href="#多行？" class="headerlink" title="多行？"></a>多行？</h3><p>在多行情况下，上下相等padding也可以实现居中效果。但是如果他不奏效那么有可能是因为他是一个table-cell元素或者是被拆开仿佛像一个但是不是。vertical-align可以起到作用不像原有的效果他可以处理一列上的居中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;高度自适应布局&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;</span><br><span class="line">  background: #f06d06;</span><br><span class="line">  font-size: 80%;</span><br><span class="line">&#125;</span><br><span class="line">table &#123;</span><br><span class="line">  background: white;</span><br><span class="line">  width: 240px;</span><br><span class="line">  border-collapse: separate;</span><br><span class="line">  margin: 20px;</span><br><span class="line">  height: 250px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table td &#123;</span><br><span class="line">  background: black;</span><br><span class="line">  color: white;</span><br><span class="line">  padding: 20px;</span><br><span class="line">  border: 10px solid white;</span><br><span class="line">  /* default is vertical-align: middle; */</span><br><span class="line">&#125;</span><br><span class="line">.center-table &#123;</span><br><span class="line">  display: table;</span><br><span class="line">  height: 250px;</span><br><span class="line">  background: white;</span><br><span class="line">  width: 240px;</span><br><span class="line">  margin: 20px;</span><br><span class="line">&#125;</span><br><span class="line">.center-table p &#123;</span><br><span class="line">  display: table-cell;</span><br><span class="line">  margin: 0;</span><br><span class="line">  background: black;</span><br><span class="line">  color: white;</span><br><span class="line">  padding: 20px;</span><br><span class="line">  border: 10px solid white;</span><br><span class="line">  vertical-align: middle;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">    &lt;td&gt;</span><br><span class="line">      I&apos;m vertically centered multiple lines of text in a real table cell.</span><br><span class="line">    &lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;div class=&quot;center-table&quot;&gt;</span><br><span class="line">  &lt;p&gt;I&apos;m vertically centered multiple lines of text in a CSS-created table layout.&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>如果出现了需要类似表格的布局那么，flexbox更好。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.container&#123;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            display: flex;</span><br><span class="line">            background-color: #C2FF21;</span><br><span class="line">            justify-content:  space-around;</span><br><span class="line">            align-items: center;</span><br><span class="line">        &#125;</span><br><span class="line">.item&#123;</span><br><span class="line">            width: 20px;</span><br><span class="line">            height: 20px;</span><br><span class="line">            background-color: #0067FF;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注意以上在有给定高度的时候管用。如果以上方法都不奏效那么请在里面加一个给定元素然后对它居中。</p><h2 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h2><h3 id="是否知道宽高"><a href="#是否知道宽高" class="headerlink" title="是否知道宽高"></a>是否知道宽高</h3><p>不知道网页布局的高度是很常见的，原因很多：如果宽度改变，文本重排可以改变高度。 文字造型的差异可以改变高度。 文字数量的变化可以改变高度。 具有固定宽高比的元素（如图像）可在更改大小时更改高度。 等等。<br>但是如果知道高度可以这样居中:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.parent &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.child &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: 50%;</span><br><span class="line">  height: 100px;</span><br><span class="line">  margin-top: -50px; /* account for padding and border if not using box-sizing: border-box; */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="如果不知道高度"><a href="#如果不知道高度" class="headerlink" title="如果不知道高度"></a>如果不知道高度</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.parent &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.child &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: 50%;</span><br><span class="line">  transform: translateY(-50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="flexbox"><a href="#flexbox" class="headerlink" title="flexbox"></a>flexbox</h3><h2 id="水平垂直居中"><a href="#水平垂直居中" class="headerlink" title="水平垂直居中"></a>水平垂直居中</h2><p>###给定宽高？<br>那么使用left,top 50%之后之后使用负的margin将其拉回即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.parent &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.child &#123;</span><br><span class="line">  width: 300px;</span><br><span class="line">  height: 100px;</span><br><span class="line">  padding: 20px;</span><br><span class="line"></span><br><span class="line">  position: absolute;</span><br><span class="line">  top: 50%;</span><br><span class="line">  left: 50%;</span><br><span class="line"></span><br><span class="line">  margin: -70px 0 0 -170px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="如果宽高不给定"><a href="#如果宽高不给定" class="headerlink" title="如果宽高不给定"></a>如果宽高不给定</h3><p>如果宽高不给定那么使用  transform: translate(-50%, -50%);注意这个的外元素也要有高度<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.parent &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.child &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: 50%;</span><br><span class="line">  left: 50%;</span><br><span class="line">  transform: translate(-50%, -50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="flexbox-1"><a href="#flexbox-1" class="headerlink" title="flexbox"></a>flexbox</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 翻译 如何居中&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yatsov.github.io/categories/front-end/"/>
    
    
      <category term="CSS" scheme="http://yatsov.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>git 基础命令使用笔记</title>
    <link href="http://yatsov.github.io/git%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4%E7%AC%94%E8%AE%B0.html"/>
    <id>http://yatsov.github.io/git基础命令笔记.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T07:07:54.611Z</updated>
    
    <content type="html"><![CDATA[<p>此处为对git使用的一个笔记记录，包括基本使用方法，命令，服务器组建。<br>当年林纳斯大神为了控制Linux的源代码信手撸来，诞生了这个出色的版本管理工具。<br><a id="more"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>此处为对git使用的一个笔记记录，包括基本使用方法，命令，服务器组建。<br>当年林纳斯大神为了控制Linux的源代码信手撸来，诞生了这个出色的版本管理工具。</p><blockquote><p>注：git只能对普通文件进行管理，二进制文件无法做到修改的版本管理只能追踪更新。</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>windows版本的git安装非常简单下载安装包按照下一步一步步来即可。<br>安装完毕之后需要设置你的用户名和你使用的邮箱</p><pre><code>git config --global user.name &quot;Your Name&quot;git config --global user.email &quot;email@example.com&quot;--global 参数代表全局使用变量</code></pre><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><h4 id="初始化一个空的仓库（Git-repository）"><a href="#初始化一个空的仓库（Git-repository）" class="headerlink" title="初始化一个空的仓库（Git repository）"></a>初始化一个空的仓库（Git repository）</h4><blockquote><p>git init </p></blockquote><h4 id="添加一次修改"><a href="#添加一次修改" class="headerlink" title="添加一次修改"></a>添加一次修改</h4><p>第一步 告诉git将一个文件添加进仓库</p><blockquote><p>1 git add . 或者git add <file>(即单个文件)<br>第二步 将文件提交到仓库<br>2 git commit -m “wrote a readme file”<br>-m是说明后面一定要写有意义的东西</file></p></blockquote><h4 id="掌握工作区的状态"><a href="#掌握工作区的状态" class="headerlink" title="掌握工作区的状态"></a>掌握工作区的状态</h4><blockquote><p>git status</p></blockquote><h4 id="查看修改内容"><a href="#查看修改内容" class="headerlink" title="查看修改内容"></a>查看修改内容</h4><blockquote><p>git diff readme.txt</p></blockquote><h3 id="回退"><a href="#回退" class="headerlink" title="回退"></a>回退</h3><h4 id="回退到上一个版本"><a href="#回退到上一个版本" class="headerlink" title="回退到上一个版本"></a>回退到上一个版本</h4><blockquote><p>git reset –hard commit_id。<br>HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令</p></blockquote><h4 id="查看提交历史"><a href="#查看提交历史" class="headerlink" title="查看提交历史"></a>查看提交历史</h4><blockquote><p>git log<br>以便确定要回退到哪个版本。</p></blockquote><h4 id="查看命令历史"><a href="#查看命令历史" class="headerlink" title="查看命令历史"></a>查看命令历史</h4><blockquote><p>git reflog<br>以便确定要回到操作回退之后的哪个版本。</p></blockquote><p>###丢弃修改</p><p>####丢弃工作区的修改</p><blockquote><p>git  checkout – file</p></blockquote><h4 id="撤销暂存区修改"><a href="#撤销暂存区修改" class="headerlink" title="撤销暂存区修改"></a>撤销暂存区修改</h4><blockquote><p>git reset HEAD file</p></blockquote><h4 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h4><blockquote><p>git rm<br>可以恢复到最新版本但是会丢失最近一次的修改内容。</p></blockquote><h3 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h3><h4 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h4><blockquote><p>git remote add origin(这里是远程仓库名称) <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:miao/learngit.git</p></blockquote><h4 id="推送到远程分支"><a href="#推送到远程分支" class="headerlink" title="推送到远程分支"></a>推送到远程分支</h4><blockquote><p>git push -u origin master<br>-u用于将本地master分支与远程分支关联起来,第一次之后就没有推送的必要了。</p></blockquote><h4 id="克隆远程仓库"><a href="#克隆远程仓库" class="headerlink" title="克隆远程仓库"></a>克隆远程仓库</h4><blockquote><p>git clone url<br>将远程仓库克隆下来</p></blockquote><h3 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h3><h4 id="创建分支并切换到分支"><a href="#创建分支并切换到分支" class="headerlink" title="创建分支并切换到分支"></a>创建分支并切换到分支</h4><blockquote><p>git checkout -b dev</p></blockquote><h4 id="查看当前分支"><a href="#查看当前分支" class="headerlink" title="查看当前分支"></a>查看当前分支</h4><blockquote><p>git branch</p></blockquote><h4 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h4><blockquote><p>git checkout master</p></blockquote><h4 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h4><blockquote><p>git merge dev</p></blockquote><h4 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h4><blockquote><p>git branch -d dev</p></blockquote><h4 id="查看分支合并图"><a href="#查看分支合并图" class="headerlink" title="查看分支合并图"></a>查看分支合并图</h4><blockquote><p>git log –graph</p></blockquote><h4 id="禁用fast-forward模式合并分支"><a href="#禁用fast-forward模式合并分支" class="headerlink" title="禁用fast forward模式合并分支"></a>禁用fast forward模式合并分支</h4><blockquote><p>git merge –no-ff -m “merge with no-ff” dev</p></blockquote><h4 id="存储工作现场"><a href="#存储工作现场" class="headerlink" title="存储工作现场"></a>存储工作现场</h4><blockquote><p>git stash存储工作现场<br>git stash pop恢复并删除存储内容<br>git stash apply 恢复但是并不删除内容<br>git stash drop 删除存储的内容<br>git stash list 查看存储的内容</p></blockquote><h4 id="强行丢弃分支"><a href="#强行丢弃分支" class="headerlink" title="强行丢弃分支"></a>强行丢弃分支</h4><blockquote><p>git branch -D <name></name></p></blockquote><h4 id="查看远程库信息"><a href="#查看远程库信息" class="headerlink" title="查看远程库信息"></a>查看远程库信息</h4><blockquote><p>git remote -v</p></blockquote><h4 id="推送分支"><a href="#推送分支" class="headerlink" title="推送分支"></a>推送分支</h4><blockquote><p>git push origin branch-name<br>如果推送失败则用git pull 抓取远程的新的提交</p></blockquote><h4 id="在本地创建与远程对应分支"><a href="#在本地创建与远程对应分支" class="headerlink" title="在本地创建与远程对应分支"></a>在本地创建与远程对应分支</h4><blockquote><p>git checkout -b branch-name origin/branch-name<br>本地和远程分支的名称最好一致</p></blockquote><h4 id="建立本地分支和远程分支的关联"><a href="#建立本地分支和远程分支的关联" class="headerlink" title="建立本地分支和远程分支的关联"></a>建立本地分支和远程分支的关联</h4><blockquote><p>git branch –set-upstream branch-name origin/branch-name</p></blockquote><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><h4 id="创建新标签"><a href="#创建新标签" class="headerlink" title="创建新标签"></a>创建新标签</h4><blockquote><p>git tag <name></name></p></blockquote><h4 id="指定标签信息"><a href="#指定标签信息" class="headerlink" title="指定标签信息"></a>指定标签信息</h4><blockquote><p>git tag -a <tagname> -m “blablabla…”</tagname></p></blockquote><h4 id="可以用PGP签名标签"><a href="#可以用PGP签名标签" class="headerlink" title="可以用PGP签名标签"></a>可以用PGP签名标签</h4><blockquote><p>git tag -s <tagname> -m “blablabla…”</tagname></p></blockquote><h4 id="查看所有标签"><a href="#查看所有标签" class="headerlink" title="查看所有标签"></a>查看所有标签</h4><blockquote><p>git tag</p></blockquote><h4 id="推送一个本地标签"><a href="#推送一个本地标签" class="headerlink" title="推送一个本地标签"></a>推送一个本地标签</h4><blockquote><p>git push origin <tagname></tagname></p></blockquote><h4 id="推送全部未推送过的本地标签"><a href="#推送全部未推送过的本地标签" class="headerlink" title="推送全部未推送过的本地标签"></a>推送全部未推送过的本地标签</h4><blockquote><p>git push origin –tags</p></blockquote><h4 id="删除一个本地标签"><a href="#删除一个本地标签" class="headerlink" title="删除一个本地标签"></a>删除一个本地标签</h4><blockquote><p>git tag -d <tagname></tagname></p></blockquote><h4 id="删除一个远程标签"><a href="#删除一个远程标签" class="headerlink" title="删除一个远程标签"></a>删除一个远程标签</h4><blockquote><p>git push origin :refs/tags/<tagname></tagname></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此处为对git使用的一个笔记记录，包括基本使用方法，命令，服务器组建。&lt;br&gt;当年林纳斯大神为了控制Linux的源代码信手撸来，诞生了这个出色的版本管理工具。&lt;br&gt;
    
    </summary>
    
      <category term="工具" scheme="http://yatsov.github.io/categories/tool/"/>
    
    
      <category term="git" scheme="http://yatsov.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 跨域详解</title>
    <link href="http://yatsov.github.io/JavaScript/JavaScript%20%E8%B7%A8%E5%9F%9F%E8%AF%A6%E8%A7%A3.html"/>
    <id>http://yatsov.github.io/JavaScript/JavaScript 跨域详解.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T11:03:50.604Z</updated>
    
    <content type="html"><![CDATA[<p>JavaScript 跨域详解</p><a id="more"></a><h2 id="什么跨域"><a href="#什么跨域" class="headerlink" title="什么跨域"></a>什么跨域</h2><p>端口、域名、协议任何一个不同都视为跨域。</p><h2 id="1-跨域资源共享（CORS）"><a href="#1-跨域资源共享（CORS）" class="headerlink" title="1 跨域资源共享（CORS）"></a>1 跨域资源共享（CORS）</h2><p>CORS（Cross-Origin Resource Sharing）跨域资源共享。<br>服务器端对于CORS的支持，主要就是通过设置Access-Control-Allow-Origin来进行的。如果浏览器检测到相应的设置，就可以允许Ajax进行跨域的访问。</p><h2 id="2-JSOUP"><a href="#2-JSOUP" class="headerlink" title="2 JSOUP"></a>2 JSOUP</h2><h3 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    function dosomething(jsondata)&#123;</span><br><span class="line">       console.log(jsondata);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;http://gis.com:8080/searchlist?callback=dosomething&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>返回示例如下：<br><img src="img/1/1.png" alt=""></p><p>通过以上方案在script中加入请求，但是要注意，如果要在dosometing中返回参数处理，那么服务器端要进行配合，返回相应参数。而在jquery中这个函数会在jquery中生成。</p><h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><p>JSONP的优点是：它的兼容性更好，在更加古老的浏览器中都可以运行，并且在请求完毕后可以通过调用callback的方式回传结果。</p><p>JSONP的缺点则是：它只支持GET请求而不支持POST等其它类型的HTTP请求；它只支持跨域HTTP请求这种情况，不能解决不同域的两个页面之间如何进行JavaScript调用的问题。</p><h2 id="3-document-domain"><a href="#3-document-domain" class="headerlink" title="3 document.domain"></a>3 document.domain</h2><h2 id="4-window-name"><a href="#4-window-name" class="headerlink" title="4 window.name"></a>4 window.name</h2><h2 id="5-HTML5中新引进的window-postMessage"><a href="#5-HTML5中新引进的window-postMessage" class="headerlink" title="5 HTML5中新引进的window.postMessage"></a>5 HTML5中新引进的window.postMessage</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JavaScript 跨域详解&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yatsov.github.io/categories/front-end/"/>
    
    
      <category term="JS" scheme="http://yatsov.github.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>JS 的apply call bind的实现</title>
    <link href="http://yatsov.github.io/JavaScript/JS%E7%9A%84applycallbind%E7%9A%84%E5%AE%9E%E7%8E%B0.html"/>
    <id>http://yatsov.github.io/JavaScript/JS的applycallbind的实现.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T11:03:27.612Z</updated>
    
    <content type="html"><![CDATA[<p>JS 的apply call bind的实现<br><a id="more"></a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h3 id="三个函数简介"><a href="#三个函数简介" class="headerlink" title="三个函数简介"></a>三个函数简介</h3><p>apply(this,[arg1,arg2…]);<br>call(this,arg1,arg2);<br>call和apply相似目的都是为了将执行函数的this值改变，后面的参数是为了填入参数<br>bind(this,arg1,arg2,arg3);<br>bind的主要目的是返回一个绑定了this的新的函数，后面的参数是填充进去的参数作为默认参数。<br>下面给一个阮一峰老师的例子:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var d = new Date();</span><br><span class="line">d.getTime() // 1481869925657</span><br><span class="line">//重写一个打印时间的函数</span><br><span class="line">var print = d.getTime;</span><br><span class="line">print() // Uncaught TypeError: this is not a Date object.</span><br><span class="line"></span><br><span class="line">var print = d.getTime.bind(d); //一个新的示例应该绑定原来的Date对象</span><br><span class="line">print() // 1481869925657</span><br></pre></td></tr></table></figure></p><h3 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a>主要思路</h3><p>apply 和call 是返回执行后的结果，所以在要绑定对象的对象内绑定一个函数执行即可。参数问题使用arguments导出一个数组将剩余的参数传入。</p><blockquote><p>注:arguments是一个类似数组的东西，只有索引和长度。详见MDN。在不手动的情况下可以使用Array.prototype.slice.call(arguments);但是这里是手动情况所以要一点点读取导出。</p></blockquote><p>bind 的话，对于执行上面使用eval直接运算函数。返回函数的时候使用一个闭包</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    Function.prototype.myCall = function (obj) &#123;</span><br><span class="line">        if (obj==null)&#123;</span><br><span class="line">            obj=window;</span><br><span class="line">        &#125;</span><br><span class="line">        obj._fn_ = this;</span><br><span class="line">        var args = [],len = arguments.length;</span><br><span class="line">        for (var i=1;i&lt;len;i++)&#123;</span><br><span class="line">            args.push(arguments[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        var result = eval(&apos;obj._fn_(&apos;+args+&apos;)&apos;);</span><br><span class="line">        delete obj._fn_;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;;</span><br><span class="line">    Function.prototype.myApply = function(obj,arr)&#123;</span><br><span class="line">        if (obj==null)&#123;</span><br><span class="line">            obj=window;</span><br><span class="line">        &#125;</span><br><span class="line">        obj._fn_ = this;</span><br><span class="line">        var result = eval(&apos;obj._fn_(&apos;+arr+&apos;)&apos;);</span><br><span class="line">        delete obj._fn_;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">    Function.prototype.myBind = function(obj)&#123;</span><br><span class="line">        if (obj==null)&#123;</span><br><span class="line">            obj=window;</span><br><span class="line">        &#125;</span><br><span class="line">        obj._fn_ = this;</span><br><span class="line">        var args = [],len = arguments.length;</span><br><span class="line">        for (var i=1;i&lt;len;i++)&#123;</span><br><span class="line">            args.push(arguments[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        var result = function()&#123;</span><br><span class="line">            var args2 = [],len = arguments.length;</span><br><span class="line">            for (var i=0;i&lt;len;i++)&#123;</span><br><span class="line">                args2.push(arguments[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            return   eval(&apos;console.log(obj);obj._fn_(&apos;+args.concat(args2)+&apos;)&apos;);</span><br><span class="line">        &#125;;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;;</span><br><span class="line">    var a = &#123;</span><br><span class="line">        l:1,</span><br><span class="line">        output:function (a) &#123;</span><br><span class="line">            console.log(Array.prototype.join.call(arguments,&quot;-&quot;));</span><br><span class="line">            return this.l;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    var b = &#123;</span><br><span class="line">        l:2</span><br><span class="line">    &#125;;</span><br><span class="line">    var c= &#123;</span><br><span class="line">        l:3</span><br><span class="line">    &#125;;</span><br><span class="line">    console.log(a.output.myApply(b,[1,2,3,4,5,6,7,8]));</span><br><span class="line">    var mybind = a.output.myBind(b,[1,2,3,4,5,6,7,8]);</span><br><span class="line">    console.log(&quot;====================================&quot;);</span><br><span class="line">    mybind(9);</span><br><span class="line">    console.log(&quot;============== binb bindc======================&quot;);</span><br><span class="line">    console.log(a.output.myBind(b)());</span><br><span class="line">    console.log(a.output.myBind(b).myBind(c)());//有一定的包裹性obj._fn_还是那个函数</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="问题-a-output-myBind-b-myBind-c-结果是b"><a href="#问题-a-output-myBind-b-myBind-c-结果是b" class="headerlink" title="问题:a.output.myBind(b).myBind(c)结果是b"></a>问题:a.output.myBind(b).myBind(c)结果是b</h2><p>这里会有一个问题，<strong>a.output.myBind(b).myBind(c)()</strong>的结果是b，最初觉得很奇怪但是想了一下主要问题在于。bind是一个包裹性的函数，第一次bind之后函数内部的this是b而在绑定一次c之后执行的是obj_fn_这里面的this是b所以执行还是b。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JS 的apply call bind的实现&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yatsov.github.io/categories/front-end/"/>
    
    
      <category term="JS" scheme="http://yatsov.github.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>Nginx环境安装及基本命令</title>
    <link href="http://yatsov.github.io/Nginx/Nginx%20Windows%20%E7%8E%AF%E5%A2%83%E4%B8%8B%20%E5%AE%89%E8%A3%85%EF%BC%8C%E7%AE%80%E4%BB%8B%E4%BB%A5%E5%8F%8A%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4.html"/>
    <id>http://yatsov.github.io/Nginx/Nginx Windows 环境下 安装，简介以及基本命令.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T11:00:50.716Z</updated>
    
    <content type="html"><![CDATA[<p>Nginx环境安装及基本命令<br><a id="more"></a></p><h1 id="Nginx-Windows-环境-安装，简介，以及基本命令"><a href="#Nginx-Windows-环境-安装，简介，以及基本命令" class="headerlink" title="Nginx Windows 环境 安装，简介，以及基本命令"></a>Nginx Windows 环境 安装，简介，以及基本命令</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Windows 下的Nginx 解压到某处之后，对conf文件夹下的配置文件进行配置（端口），之后使用命令行打开即可。</p><h2 id="文件夹简介"><a href="#文件夹简介" class="headerlink" title="文件夹简介"></a>文件夹简介</h2><p>如图Nginx包含以下目录<br><img src="img/1-1.png" alt=""></p><p><strong>conf</strong>  : 存放Nginx的配置文件</p><p><strong>contrib</strong>   : 存放一些工具</p><p><strong>docs</strong>: 存放一些Nginx的文档资料</p><p><strong>html</strong>: 存放了两个静态的网页</p><p><strong>logs</strong>: 日志文件</p><p><strong>temp</strong>: 存放一些缓存数据</p><p><strong>nginx.exe</strong>: nginx主程序</p><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><p>Nginx的开启方式为，将命令行转到Nginx.exe 所在目录下，之后运行命令行即可。常用命令行如下：</p><blockquote><p>start nginx 打开Nginx<br>nginx -s stop 快速关闭，不保存相关信息。<br>nginx -s quit 完全有序关闭Nginx并保存相关信息<br>nginx -s reload 配置信息改变时重新载入<br>nginx -s reopen 重新打开日志<br>nginx -v 查看版本</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Nginx环境安装及基本命令&lt;br&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://yatsov.github.io/categories/server/"/>
    
    
      <category term="nginx" scheme="http://yatsov.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat的安装以及简要调优</title>
    <link href="http://yatsov.github.io/Tomcat/Tomcat%E7%9A%84%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E7%AE%80%E8%A6%81%E8%B0%83%E4%BC%98.html"/>
    <id>http://yatsov.github.io/Tomcat/Tomcat的安装以及简要调优.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T10:57:57.508Z</updated>
    
    <content type="html"><![CDATA[<p>Tomcat的安装以及简要调优<br><a id="more"></a></p><h1 id="1-Tomcat的安装"><a href="#1-Tomcat的安装" class="headerlink" title="1 Tomcat的安装"></a>1 Tomcat的安装</h1><p>文档主要介绍一个和多个Tomcat的安装、应用程序的部署以及常见问题解答。此处以Tomcat8为例但是现场请安装8.5。</p><h2 id="1-1-Tomcat的安装"><a href="#1-1-Tomcat的安装" class="headerlink" title="1.1 Tomcat的安装"></a><strong>1.1 Tomcat的安装</strong></h2><p>Tomcat使用免安装版，无需安装解压即可将压缩包解压到指定的路径。</p><h3 id="1-1-1-查看端口使用情况"><a href="#1-1-1-查看端口使用情况" class="headerlink" title="1.1.1 查看端口使用情况"></a>1.1.1 查看端口使用情况</h3><p>在命令窗口中使用“netstat -ano”查看端口使用情况，</p><p><img src="media/2449157b9f161a28356ebda0f7a8cc7d.png" alt=""></p><p>图4.1</p><h3 id="1-1-2-修改端口号"><a href="#1-1-2-修改端口号" class="headerlink" title="1.1.2 修改端口号"></a>1.1.2 修改端口号</h3><p>打开Tomcat-8\conf\server.xml文件，修改端口号,将Connector<br>port设置为使用的端口，防止端口被占用，</p><p><img src="media/4fee0738f3c228e0248eb29587387b9c.png" alt=""></p><p>图4.2</p><h3 id="1-1-3-设置管理员密码"><a href="#1-1-3-设置管理员密码" class="headerlink" title="1.1.3 设置管理员密码"></a>1.1.3 设置管理员密码</h3><p>设置管理员用户和密码会增加远程攻击可能性，所以本处只做学习说明，根据之后的需要调用。项目安装中不设置。</p><p>设置Tomcat管理员用户名和密码，打开Tomcat-8\conf\server.xml文件Tomcat-users.xml，增加下面代码，建议设置为<br>“admin”，</p><p>\&lt;role rolename=”manager-gui”/></p><p>\&lt;user username=”admin” password=”admin” roles=”manager-gui”/></p><p><img src="media/64ee5b20cfe2c4b761cdabb11173304e.png" alt=""></p><p>图4.3</p><h3 id="1-1-4-调整Tomcat内存大小"><a href="#1-1-4-调整Tomcat内存大小" class="headerlink" title="1.1.4 调整Tomcat内存大小"></a>1.1.4 调整Tomcat内存大小</h3><p>以编辑方式打开D:\apache-Tomcat-8\bin目录下的catalina.bat文件，在文件\@echo<br>off下，增加“set JAVA_OPTS=-server -Xms512m -Xmx1024m -XX:PermSize=512M<br>-XX:MaxPermSize=1024M”PermSize可以根据实际情况进行调整，可在一定程度上解除在中间件运行过程中发生内存溢出的异常。</p><p><img src="media/042485b028faae6ea95d027da1a3ac93.png" alt=""></p><p>图4.4</p><h3 id="1-1-5-启动Tomcat服务"><a href="#1-1-5-启动Tomcat服务" class="headerlink" title="1.1.5 启动Tomcat服务"></a>1.1.5 启动Tomcat服务</h3><p>找到文件夹打开Tomcat-8\bin\ startup.bat，双击启动，即可看到部署成功。</p><p><img src="media/7c0ae4cb550692c87cbcdc2460f426a2.png" alt=""></p><p>图4.5</p><p>也可以打开IE浏览器，在地址栏中输入：<a href="http://localhost:80/" target="_blank" rel="noopener">http://localhost:80/</a> <em>；其中<br>80为端口号，要看自己的实际设置。</em>出现如下图所示网页，即表明Tomcat安装成功。</p><p><img src="media/8162c1db6560f05cf26f83b11d475de7.png" alt=""></p><p>图4.6</p><h3 id="1-1-6-查看部署项目"><a href="#1-1-6-查看部署项目" class="headerlink" title="1.1.6 查看部署项目"></a>1.1.6 查看部署项目</h3><p>点击图中的的Manager App可查看部署的项目。</p><p><img src="media/c7cda158429f634f8ac477e2aae63a07.png" alt=""></p><p>图4.7</p><p>点击“Manager<br>App”，弹出用户名和密码界面，即在Tomcat-users.xml文件中设置的用户名和密码。</p><p><img src="media/5fce84dd33e72521b4e5dfc288eecbeb.png" alt=""></p><p>图4.8</p><p>输入用户名和密码，可查看部署的项目。</p><p><img src="media/7086694bb8d33a159638f33e4998b4c3.png" alt=""></p><p>图4.9</p><h3 id="1-1-7-开启GZIP压缩"><a href="#1-1-7-开启GZIP压缩" class="headerlink" title="1.1.7 开启GZIP压缩"></a>1.1.7 开启GZIP压缩</h3><p>在TOMCAT_HOME/conf/server.xml<br>中的找到如下Connector将compression改成on并修改其它属性致图片状。</p><p><img src="media/f9a39b5923862c72fe5d1927410aa9d9.png" alt=""></p><p>图4.10</p><h2 id="1-2-多个Tomcat的安装和配置"><a href="#1-2-多个Tomcat的安装和配置" class="headerlink" title="1.2 多个Tomcat的安装和配置"></a><strong>1.2 多个Tomcat的安装和配置</strong></h2><p>Tomcat可以作为一款绿色软件使用，单独安装或直接拷贝都可以完成Tomcat的部署，使用免安装版。</p><h3 id="1-2-1-拷贝"><a href="#1-2-1-拷贝" class="headerlink" title="1.2.1 拷贝"></a><strong>1.2.1 拷贝</strong></h3><p>免安装版的Tomcat可在同一个电脑上部署多个，将Tomcat-8文件下的所有子文件，复制到Tomcat-8082文件夹下，注意第一个Tomcat的配置不变，修改新增的Tomcat下一些参数。</p><h3 id="1-2-2-修改端口号"><a href="#1-2-2-修改端口号" class="headerlink" title="1.2.2 修改端口号"></a><strong>1.2.2 修改端口号</strong></h3><p>打开D:\ Tomcat-8082\conf目录下的server.xml文件，需要修改三个端口号：</p><ol><li>将之前的“80”端口修改为其他端口号，如“8082”：</li></ol><p><img src="media/b4314acae2c39bef62a04e31f613967e.png" alt=""></p><p>图4.11</p><ol><li>将之前的“8005”端口修改为其他端口号，如“8006”：</li></ol><p><img src="media/cb7f3c2c633529731dca6280b98124a9.png" alt=""></p><p>图4.12</p><ol><li>将之前的“8009”端口修改为其他端口号，如“8092”，8443这个端口不可更改。</li></ol><p><img src="media/a51869af04682dc2ff41e6734c1ad16c.png" alt=""></p><p>图4.13</p><h2 id="1-3-部署和移除应用程序"><a href="#1-3-部署和移除应用程序" class="headerlink" title="1.3 部署和移除应用程序"></a>1.3 部署和移除应用程序</h2><p>在Tomcat中部署和移除项目，共三种方法分别为：手动创建xml文件方式、控制台方式，直接拷贝应用程序到webapps下方式。</p><h3 id="1-3-1-手动创建xml文件方式（推荐）"><a href="#1-3-1-手动创建xml文件方式（推荐）" class="headerlink" title="1.3.1 手动创建xml文件方式（推荐）"></a><strong>1.3.1 手动创建xml文件方式（推荐）</strong></h3><p>对于免安装的Tomcat，并没有控制台功能，这种情况下，推荐采用手动创建xml文件方式来部署应用服务。</p><h4 id="1-3-1-1-部署"><a href="#1-3-1-1-部署" class="headerlink" title="1.3.1.1 部署"></a>1.3.1.1 部署</h4><p>在“D:\<br>Tomcat-8\conf\Catalina\localhost”下新建“文本文档”，重命名为SCMIS.xml，编辑SCMIS.xml，填充内容如下：</p><p>\&lt;?xml version=”1.0” encoding=”UTF-8”?></p><p>\&lt;Context</p><p>crossContext=”true” docBase=”E:\webapp\SCMIS” path=”/SCMIS”<br>reloadable=”true”></p><p>\&lt;/Context></p><p>图4.14</p><p>其中，docBase的值为web应用程序所在文件路径（文中红色字体），path的值为web应用程序的名称（文中红色字体）。</p><h4 id="1-3-1-2-移除"><a href="#1-3-1-2-移除" class="headerlink" title="1.3.1.2 移除"></a>1.3.1.2 移除</h4><p>如果不想启动SCMIS应用服务，只要将“D:\<br>Tomcat-8\conf\Catalina\localhost”下对应的SCMIS.xml文件删除即可。</p><h3 id="1-3-2-直接拷贝应用程序到webapps下方式"><a href="#1-3-2-直接拷贝应用程序到webapps下方式" class="headerlink" title="1.3.2 直接拷贝应用程序到webapps下方式"></a><strong>1.3.2 直接拷贝应用程序到webapps下方式</strong></h3><h4 id="1-3-2-1部署"><a href="#1-3-2-1部署" class="headerlink" title="1.3.2.1部署"></a>1.3.2.1部署</h4><p>直接将web应用程序拷贝到“D:\Tomcat-8\webapps\”下即可。</p><h4 id="1-3-2-2-移除"><a href="#1-3-2-2-移除" class="headerlink" title="1.3.2.2 移除"></a>1.3.2.2 移除</h4><p>如果想不启动SCMIS应用服务，将web应用程序从“D:\ Tomcat-8\webapps\”下删除即可。</p><h2 id="1-4-FAQ"><a href="#1-4-FAQ" class="headerlink" title="1.4 FAQ"></a>1.4 FAQ</h2><h3 id="1-4-1为Tomcat增加Title"><a href="#1-4-1为Tomcat增加Title" class="headerlink" title="1.4.1为Tomcat增加Title"></a><strong>1.4.1为Tomcat增加Title</strong></h3><p>由于现场在实际使用中，可能会在同一台服务器上同时启动多个Tomcat，很容易搞混淆,因此为Tomcat增加Title便于识别当前启动的是什么系统。</p><p>在Tomcat安装目录D:\<br>Tomcat-8\bin中，找到catalina.bat文件并打开，打开搜索框，搜索‘TITLE’找到如下位置，参照下面图片进行修改，注意：第二个红框要加引号</p><p><img src="media/ee7b26087d125b461e5b4168687ca745.png" alt=""></p><p>图4.15</p><p>修改后的效果，如下图所示;</p><p><img src="media/a6eb4c038bb86783fbc2c484efaeba8a.png" alt=""></p><p>图4.16</p><h3 id="1-4-2-Tomcat启动时一闪而过"><a href="#1-4-2-Tomcat启动时一闪而过" class="headerlink" title="1.4.2 Tomcat启动时一闪而过"></a><strong>1.4.2 Tomcat启动时一闪而过</strong></h3><p>解决方法有三种：</p><ol><li><p>环境变量设置不对，先检查环境变量是否设置完全正确了；</p></li><li><p>环境变量检查完全正确的情况下，在startup.bat文件的最后面,换行加上pause；然后再启动看下报错信息</p></li></ol><p><img src="media/6d66f9986175e044e5c05e81dc459a93.png" alt=""></p><p>图4.17</p><ol><li>如果以上方法设置后，还是一闪而过，则找到startup.bat倒数几行的位置；</li></ol><p><img src="media/6ba9ede25ba835612c37507ecf08a226.png" alt=""></p><p>图4.18</p><p>将start修改为run,如下，再启动Tomcat，注意：使用第三种方法知道了错误原因后，则务必将run修改回start。</p><p><img src="media/af6655bd1a411cd775fe41f28e4103fb.png" alt=""></p><p>图4.19</p><h3 id="1-4-3-启动Tomcat失败"><a href="#1-4-3-启动Tomcat失败" class="headerlink" title="1.4.3 启动Tomcat失败"></a><strong>1.4.3 启动Tomcat失败</strong></h3><p>启动Tomcat失败，错误信息如下：“java.lang.OutOfMemoryErrorthrownfromtheUncaughtExceptionHandler<br>in thread “startQuertz_QuartzSchedulerThread”</p><p>失败原因是内存溢出，解决办法参考4.1.4 调整Tomcat内存大小。</p><h3 id="1-4-4-SCMIS项目Running值是false"><a href="#1-4-4-SCMIS项目Running值是false" class="headerlink" title="1.4.4 SCMIS项目Running值是false"></a><strong>1.4.4 SCMIS项目Running值是false</strong></h3><p>Tomcat中Manager app中SCMIS<br>Running值是false，在onf\Catalina\localhost下新建SCMIS.xml时，Tomcat服务应该关闭。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tomcat的安装以及简要调优&lt;br&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://yatsov.github.io/categories/server/"/>
    
    
      <category term="Tomcat" scheme="http://yatsov.github.io/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>CSS浮动为什么会塌陷</title>
    <link href="http://yatsov.github.io/CSS/CSS%20%E6%B5%AE%E5%8A%A8%E5%A1%8C%E9%99%B7.html"/>
    <id>http://yatsov.github.io/CSS/CSS 浮动塌陷.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T11:08:55.366Z</updated>
    
    <content type="html"><![CDATA[<p>CSS浮动为什么会塌陷<br><a id="more"></a></p><h3 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h3><p>浮动的框可以向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。<br>浮动脱离文档流，所以文档的普通流中的块框表现得就像浮动框不存在一样。</p><h3 id="浮动塌陷"><a href="#浮动塌陷" class="headerlink" title="浮动塌陷"></a>浮动塌陷</h3><p>当元素设置浮动而父元素的宽高没有设置时，高度会塌缩为0。如图<br><img src="img/1.png" alt="浮动塌陷"></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="1-在父元素里面填加一个没宽度高度的元素使用clear-both"><a href="#1-在父元素里面填加一个没宽度高度的元素使用clear-both" class="headerlink" title="1 在父元素里面填加一个没宽度高度的元素使用clear:both"></a>1 在父元素里面填加一个没宽度高度的元素使用clear:both</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        #div1&#123;</span><br><span class="line">          border :1px solid #595959;</span><br><span class="line">        &#125;</span><br><span class="line">        #div2&#123;</span><br><span class="line">            width: 200px; </span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: #172FC0;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        .clear:after&#123;/*清除浮动*/</span><br><span class="line">            content: &apos;&apos;;</span><br><span class="line">            display:block;</span><br><span class="line">            clear: both;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;div1&quot; class=&quot;clear&quot;&gt;</span><br><span class="line">            &lt;div id=&quot;div2&quot;  &gt;      </span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="img/2.png" alt="浮动塌陷"></p><p>按照我的理解在外部div的后面加上了一个没有高度和宽度的元素，并且使用了clear清除了左右的浮动使得两边没有浮动对象让整个内容被撑开。</p><h4 id="2-使用overflow-hidden"><a href="#2-使用overflow-hidden" class="headerlink" title="2 使用overflow:hidden"></a>2 使用overflow:hidden</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        #div1&#123;</span><br><span class="line">          border :1px solid #595959;</span><br><span class="line">          overflow: hidden;/*清除浮动*/</span><br><span class="line">        &#125;</span><br><span class="line">        #div2&#123;</span><br><span class="line">            width: 200px; </span><br><span class="line">            height: 800px;</span><br><span class="line">            background-color: #172FC0;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        .clear:after&#123;</span><br><span class="line">            content: &apos;&apos;;</span><br><span class="line">            display:block;</span><br><span class="line">            clear: both;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;div1&quot; &gt;</span><br><span class="line">            &lt;div id=&quot;div2&quot;  &gt;</span><br><span class="line">                </span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>overflow:hidden触发了外层的BFC布局，使得内层的高度被计算。</p><h4 id="3-给父元素添加高度"><a href="#3-给父元素添加高度" class="headerlink" title="3 给父元素添加高度"></a>3 给父元素添加高度</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CSS浮动为什么会塌陷&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yatsov.github.io/categories/front-end/"/>
    
    
      <category term="CSS" scheme="http://yatsov.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>JS的比较运算符,数值自动转换笔记</title>
    <link href="http://yatsov.github.io/JavaScript/%E4%B8%87%E6%81%B6%E7%9A%84JS%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BB%A5%E5%8F%8A%E6%95%B0%E5%80%BC%E8%87%AA%E5%8A%A8%E8%BD%AC%E6%8D%A2%E7%AC%94%E8%AE%B0.html"/>
    <id>http://yatsov.github.io/JavaScript/万恶的JS比较运算符以及数值自动转换笔记.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T11:02:58.491Z</updated>
    
    <content type="html"><![CDATA[<p>JS的比较运算符,数值自动转换笔记<br><a id="more"></a></p><blockquote><p>JS的比较运算符比较复杂,在学习了<a href="http://javascript.ruanyifeng.com/grammar/operator.html#toc9" target="_blank" rel="noopener">阮一峰老师JS参考教程</a>之后做了笔记</p></blockquote><h2 id="总体思路"><a href="#总体思路" class="headerlink" title="总体思路"></a>总体思路</h2><p>1、相等或者不相等 先转换在比较<br>2、全等或者不全等 比较不转换<br>3、NaN与什么比较都是false</p><h2 id="数值的自动转换"><a href="#数值的自动转换" class="headerlink" title="数值的自动转换"></a>数值的自动转换</h2><p>数值的自动转换分为三种情况 Number Boolean String</p><h3 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// 数值：转换后还是原来的值</span><br><span class="line">Number(324) // 324</span><br><span class="line"></span><br><span class="line">// 字符串：如果可以被解析为数值，则转换为相应的数值</span><br><span class="line">Number(&apos;324&apos;) // 324</span><br><span class="line"></span><br><span class="line">// 字符串：如果不可以被解析为数值，返回 NaN</span><br><span class="line">Number(&apos;324abc&apos;) // NaN</span><br><span class="line"></span><br><span class="line">// 空字符串转为0</span><br><span class="line">Number(&apos;&apos;) // 0</span><br><span class="line">// 布尔值：true 转成 1，false 转成 0</span><br><span class="line">Number(true) // 1</span><br><span class="line">Number(false) // 0</span><br><span class="line"></span><br><span class="line">// undefined：转成 NaN</span><br><span class="line">Number(undefined) // NaN</span><br><span class="line"></span><br><span class="line">// null：转成0</span><br><span class="line">Number(null) // 0</span><br></pre></td></tr></table></figure><p>注意Number解析对象的时候先valueOf后toString,都不行在报错。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Number(&#123;</span><br><span class="line">  valueOf: function () &#123;</span><br><span class="line">    return 2;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">// 2</span><br><span class="line"></span><br><span class="line">Number(&#123;</span><br><span class="line">  toString: function () &#123;</span><br><span class="line">    return 3;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">// 3</span><br><span class="line"></span><br><span class="line">Number(&#123;</span><br><span class="line">  valueOf: function () &#123;</span><br><span class="line">    return 2;</span><br><span class="line">  &#125;,</span><br><span class="line">  toString: function () &#123;</span><br><span class="line">    return 3;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">// 2</span><br></pre></td></tr></table></figure></p><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String(123) // &quot;123&quot;</span><br><span class="line">String(&apos;abc&apos;) // &quot;abc&quot;</span><br><span class="line">String(true) // &quot;true&quot;</span><br><span class="line">String(undefined) // &quot;undefined&quot;</span><br><span class="line">String(null) // &quot;null&quot;</span><br></pre></td></tr></table></figure><p>String 与Number相反先toString后valueOf</p><h3 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean"></a>Boolean</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">undefined</span><br><span class="line">null</span><br><span class="line">-0或+0</span><br><span class="line">NaN</span><br><span class="line">&apos;&apos;（空字符串）</span><br></pre></td></tr></table></figure><p>以上结果为false,其余为true。对象全部转化为true。</p><h2 id="非相等比较"><a href="#非相等比较" class="headerlink" title="非相等比较"></a>非相等比较</h2><p>非想等比较首先看能否是字符串如果是则比较Unicode码点,如果无法转换则将其转换为数值在进行比较。</p><h3 id="原始类型的非相等比较"><a href="#原始类型的非相等比较" class="headerlink" title="原始类型的非相等比较"></a>原始类型的非相等比较</h3><p>原始类型的非相等比较为先转换为数值在比较。对于对象要先执行valueOf后执行toString。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var x = [2];</span><br><span class="line">x &gt; &apos;11&apos; // true</span><br><span class="line">// 等同于 [2].valueOf().toString() &gt; &apos;11&apos;</span><br><span class="line">// 即 &apos;2&apos; &gt; &apos;11&apos;</span><br><span class="line">// 两个字符串先比较第一个码点&apos;2&apos;&gt;&apos;1&apos;</span><br><span class="line"></span><br><span class="line">x.valueOf = function () &#123; return &apos;1&apos; &#125;;</span><br><span class="line">x &gt; &apos;11&apos; // false</span><br><span class="line">// 等同于 [2].valueOf() &gt; &apos;11&apos;</span><br><span class="line">// 即 &apos;1&apos; &gt; &apos;11&apos;</span><br></pre></td></tr></table></figure></p><h3 id="严格相等运算符"><a href="#严格相等运算符" class="headerlink" title="严格相等运算符"></a>严格相等运算符</h3><p>1、不同类型返回false<br>true === “true” // false<br>2、相同类型该是啥就是啥</p><blockquote><p>+0==-0</p></blockquote><p>3、对象等复合类型比较地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125; === &#123;&#125; // false</span><br><span class="line">[] === [] // false</span><br><span class="line">(function () &#123;&#125; === function () &#123;&#125;) // false</span><br></pre></td></tr></table></figure></p><p>4、undefined与null自身严格相等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">undefined === undefined // true</span><br><span class="line">null === null // true</span><br></pre></td></tr></table></figure></p><p>5、严格不相等是严格相等的反</p><h3 id="相等运算符"><a href="#相等运算符" class="headerlink" title="相等运算符"></a>相等运算符</h3><p>1、原始类型值会转换为数值进行比较<br>2、对象与原始类型进行比较则对象先转换为原始类型的值在进行比较<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[1] == 1 // true</span><br><span class="line">// 等同于 Number([1]) == 1</span><br><span class="line"></span><br><span class="line">[1] == &apos;1&apos; // true</span><br><span class="line">// 等同于 String([1]) == Number(&apos;1&apos;)</span><br><span class="line"></span><br><span class="line">[1] == true // true</span><br><span class="line">// 等同于 Number([1]) == Number(true)</span><br></pre></td></tr></table></figure></p><p>3、undefined和null与其他类型的值比较时，结果都为false，它们互相比较时结果为true。</p><h3 id="奇形怪状的解"><a href="#奇形怪状的解" class="headerlink" title="奇形怪状的解"></a>奇形怪状的解</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">0 == &apos;&apos;             // true</span><br><span class="line">//相等比较 转换为两个数字 0==0</span><br><span class="line">0 == &apos;0&apos;            // true</span><br><span class="line">//相等比较 转化为两个数字 0==0</span><br><span class="line">2 == true           // false</span><br><span class="line">//转换为数字 2==1</span><br><span class="line">2 == false          // false</span><br><span class="line">//2==0</span><br><span class="line">false == &apos;false&apos;    // false</span><br><span class="line">// 0==NaN</span><br><span class="line">false == &apos;0&apos;        // true</span><br><span class="line">//转换为数字 0==0</span><br><span class="line">false == undefined  // false</span><br><span class="line">//undefined与 任何相等都不等</span><br><span class="line">false == null       // false</span><br><span class="line">//null与 任何相等都不等</span><br><span class="line">null == undefined   // true</span><br><span class="line"></span><br><span class="line">&apos; \t\r\n &apos; == 0     // true</span><br></pre></td></tr></table></figure><h3 id="以上整理自阮一峰老师的博客"><a href="#以上整理自阮一峰老师的博客" class="headerlink" title="以上整理自阮一峰老师的博客"></a>以上整理自阮一峰老师的博客</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JS的比较运算符,数值自动转换笔记&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yatsov.github.io/categories/front-end/"/>
    
    
      <category term="JS" scheme="http://yatsov.github.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>CSS margin 学习笔记</title>
    <link href="http://yatsov.github.io/CSS/CSS-margin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>http://yatsov.github.io/CSS/CSS-margin学习笔记.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T11:08:30.388Z</updated>
    
    <content type="html"><![CDATA[<p>CSS margin 学习笔记<br><a id="more"></a></p><h2 id="margin高度自适应"><a href="#margin高度自适应" class="headerlink" title="margin高度自适应"></a>margin高度自适应</h2><p>首选margin 和padding在数值为百分比的时候统一计算的是父元素的宽度。这里的一个小栗子是高度自适应。我们可以利用margin和padding来实现高度补全。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;width:50%;padding:25% 25%;background:green;&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>效果如图：<br><img src="img/margin/1.png" alt=""></p><h2 id="一行布局"><a href="#一行布局" class="headerlink" title="一行布局"></a>一行布局</h2><p>在通过margin和padding的配合可以实现一个两栏同高布局。代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">.container&#123;</span><br><span class="line">overflow: hidden;</span><br><span class="line">max-width: 600px;</span><br><span class="line">margin: 0 auto;</span><br><span class="line">&#125;</span><br><span class="line">.column-left,.column-right&#123;</span><br><span class="line">margin-bottom: -9999px;</span><br><span class="line">    padding-bottom: 9999px;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.column-left&#123;</span><br><span class="line">background-color: red;</span><br><span class="line">width: 20%;</span><br><span class="line">float: left;</span><br><span class="line">color: white;</span><br><span class="line">&#125;</span><br><span class="line">.colunm-right&#123;</span><br><span class="line">background-color: blue;</span><br><span class="line">width: 80%;</span><br><span class="line">float: left;</span><br><span class="line">color: white;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">&lt;div class=&quot;column-left&quot;&gt;</span><br><span class="line">&lt;p&gt;112&lt;/p&gt;</span><br><span class="line">&lt;p&gt;223&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;colunm-right&quot;&gt;</span><br><span class="line">&lt;p&gt;2234&lt;/p&gt;</span><br><span class="line">&lt;p&gt;3456&lt;/p&gt;</span><br><span class="line">&lt;p&gt;3456&lt;/p&gt;</span><br><span class="line">&lt;p&gt;3456&lt;/p&gt;</span><br><span class="line">&lt;p&gt;3456&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p><img src="img/margin/2.png" alt=""></p><p>通过上面的代码可以看到，首先两栏分别都用了margin:-9999和padding:9999，margin的作用是将下面的元素提上来而padding正好又将元素压了下去，对于布局没有影响。但是9999px太高了所有使用overflow:hidden将元素多余的地方去掉。</p><h2 id="margin-合并"><a href="#margin-合并" class="headerlink" title="margin 合并"></a>margin 合并</h2><h3 id="什么是margin合并"><a href="#什么是margin合并" class="headerlink" title="什么是margin合并"></a>什么是margin合并</h3><p>块级元素的上外边距 和另一个块级元素的下外边距的margin有时候会合并为一个，叫做margin合并。</p><blockquote><p>margin只发生在 1）块级元素2）垂直情况</p></blockquote><h3 id="如何解决"><a href="#如何解决" class="headerlink" title="如何解决"></a>如何解决</h3><p>1、父元素设置为BFC<br>2、加上border-top/border-bottom（根据合并的上下位置而定）<br>3、加上padding-top/padding-bottom（根据合并的上下位置而定）<br>4、在合并的两个元素之间添加一个内联元素<br>5、为父元素设置高度</p><h2 id="margin-水平居中"><a href="#margin-水平居中" class="headerlink" title="margin  水平居中"></a>margin  水平居中</h2><p>通常使用的 margin : 0 auto;对于块级元素管用，另外外部需要有宽度。另外margin-一侧缺失则是展现一侧对其效果。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;width:300px; background-color:powderblue;overflow:hidden;&quot;&gt;</span><br><span class="line">        &lt;div style=&quot;width:100px;height:100px;margin-left:auto;background-color:orange;&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p><img src="img/margin/3.png" alt=""></p><h3 id="margin-无效"><a href="#margin-无效" class="headerlink" title="margin  无效"></a>margin  无效</h3><p>1、display为inline的非替换元素的margin值是无效的。<br>2、margin合并的时候更改margin可能无效除非比那两个值更大及引起重新计算。<br>3、margin需要更长的值才能有效，如图<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;width:300px; background-color:powderblue;overflow:hidden;&quot;&gt;</span><br><span class="line">        &lt;div alt=&quot;12&quot; style=&quot;width:100px;height:100px;background-color:orchid;float:left;&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div style=&quot;width:100px;height:100px;background-color:orange;margin-left:5px;overflow:hidden;&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p><img src="img/margin/3.png" alt=""><br>上面左边是一个div元素但是float:left右边是一个div元素但是overflow:hidden;他的margin-left为5，之后我们将其改为超过左侧div的元素。</p><p><img src="img/margin/4.png" alt=""><br>出现这种情况的原因在于首先左侧的元素float脱离了文档流，他脱离了文档流但是还是占用着内部空间，右边的那个元素清楚了浮动所以左边的元素还可以影响到右边的元素所以那个margin的值是从最左侧也就是父元素的值算起的。所以margin-left的值只有超过左侧的宽度才可以。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CSS margin 学习笔记&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yatsov.github.io/categories/front-end/"/>
    
    
      <category term="CSS" scheme="http://yatsov.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>CSS 实现尖角样式</title>
    <link href="http://yatsov.github.io/CSS/CSS%E5%AE%9E%E7%8E%B0%E5%B0%96%E8%A7%92%E6%A0%B7%E5%BC%8F.html"/>
    <id>http://yatsov.github.io/CSS/CSS实现尖角样式.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T11:07:29.580Z</updated>
    
    <content type="html"><![CDATA[<p> CSS 实现尖角样式<br><a id="more"></a></p><h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>实现一个CSS的尖角样式 ，思路为 用两个尖角，我是用的是一个before一个div、将其放到指定的位置，一个小一点作为尖角另外一个大一点作为尖角的border。然后使用position定位以及负的margin将其定位上去即可代码如下。</p><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        body &#123; /*  清除选择的颜色 */</span><br><span class="line">            -moz-user-select: none; /*火狐*/</span><br><span class="line">            -webkit-user-select: none; /*webkit浏览器*/</span><br><span class="line">            -ms-user-select: none; </span><br><span class="line">            user-select: none;</span><br><span class="line">        &#125;</span><br><span class="line">        .drop-list-btn&#123;</span><br><span class="line">            background:#41464b;</span><br><span class="line">            box-shadow:0 4px 12px 0 rgba(0,0,0,0.20);</span><br><span class="line">            border-radius:2px;</span><br><span class="line">            width:168px;</span><br><span class="line">            height:56px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line">       .drop-list-btn span&#123;</span><br><span class="line">            font-family:PingFangSC-Medium;</span><br><span class="line">            font-size:24px;</span><br><span class="line">            color:#ffffff;</span><br><span class="line">            letter-spacing:0;</span><br><span class="line">            line-height:24px;</span><br><span class="line">            text-align:center;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            position: relative;</span><br><span class="line">            left: 50%;</span><br><span class="line">            top: 50%;</span><br><span class="line">            transform: translate(-50%,-50%);</span><br><span class="line">            height: 30px;</span><br><span class="line">        &#125;</span><br><span class="line">        .drop-list&#123;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            background:#ffffff;</span><br><span class="line">            border:1px solid #dddddd;</span><br><span class="line">            box-shadow:0 4px 12px 0 rgba(0,0,0,0.10);</span><br><span class="line">            border-radius:2px;</span><br><span class="line">            width:249px;</span><br><span class="line">            height:319px;</span><br><span class="line">        &#125;</span><br><span class="line">        .drop-list-item&#123;</span><br><span class="line">            width:249px;</span><br><span class="line">            height:64px;</span><br><span class="line">        &#125;</span><br><span class="line">        .drop-list-item:hover&#123;</span><br><span class="line">            background:#f5f5f5;</span><br><span class="line">        &#125;</span><br><span class="line">        .drop-list-item div&#123;</span><br><span class="line">            height: 100%;float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        .drop-list-item div:nth-child(1)&#123;</span><br><span class="line">            width: 41px;</span><br><span class="line">         &#125;</span><br><span class="line">        .drop-list-item div:nth-child(2)&#123;</span><br><span class="line">            width: 40px;background: url(icons/docs@2x.png) no-repeat content-box center;</span><br><span class="line">         &#125;</span><br><span class="line">         .drop-list-item div:nth-child(3)&#123;</span><br><span class="line">            width: 23px;</span><br><span class="line">         &#125;</span><br><span class="line">        .drop-list-item div:nth-child(4)&#123;</span><br><span class="line">                font-family:PingFangSC-Regular;</span><br><span class="line">                font-size:24px;</span><br><span class="line">                color:#666666;</span><br><span class="line">                letter-spacing:0;</span><br><span class="line">                line-height:24px;</span><br><span class="line">                text-align:left;</span><br><span class="line">                width: 96px;</span><br><span class="line">        &#125;</span><br><span class="line">        .drop-list-item div:nth-child(4) span&#123;</span><br><span class="line">                display: inline-block;top: 50%;transform: translateY(-50%);position: relative;</span><br><span class="line">        &#125;</span><br><span class="line">       .drop-list::before &#123;</span><br><span class="line">                border-right: 13px solid transparent;</span><br><span class="line">                border-bottom: 13px solid rgba(0,0,0,0.1);</span><br><span class="line">                width: 0px;</span><br><span class="line">                border-left: 13px solid transparent;</span><br><span class="line">                content: &apos;&apos;;</span><br><span class="line">                margin-top: -13px;</span><br><span class="line">                position: relative;</span><br><span class="line">                top: -36px;  </span><br><span class="line">                left: 119px;</span><br><span class="line">        &#125;</span><br><span class="line">        .drop-list-triangle&#123; /*外面的三角形 底色用before*/</span><br><span class="line">            border-right:12px solid transparent;border-bottom:12px solid white;width: 0px;border-left:12px solid transparent;margin-top:-12px;position: relative;left: 119.5px;top: -22px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;div class=&quot;drop-list-btn&quot;&gt;</span><br><span class="line">           &lt;span&gt;新建&lt;/span&gt; </span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;drop-list&quot; style=&quot;margin-top: 20px;&quot;&gt;</span><br><span class="line">           &lt;div class=&quot;drop-list-triangle&quot;  &gt;&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;drop-list-item&quot; &gt;</span><br><span class="line">                &lt;div &gt;&lt;/div&gt;</span><br><span class="line">                &lt;div &gt;&lt;/div&gt;</span><br><span class="line">                &lt;div &gt;&lt;/div&gt;</span><br><span class="line">                &lt;div &gt;</span><br><span class="line">                    &lt;span &gt;文档&lt;/span&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">             &lt;div class=&quot;drop-list-item&quot; &gt;</span><br><span class="line">                &lt;div &gt;&lt;/div&gt;</span><br><span class="line">                &lt;div style=&quot;background: url(icons/chart@2x.png) no-repeat content-box center;&quot;&gt;&lt;/div&gt;</span><br><span class="line">                &lt;div &gt;&lt;/div&gt;</span><br><span class="line">                &lt;div &gt;</span><br><span class="line">                    &lt;span &gt;表格&lt;/span&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">             &lt;div class=&quot;drop-list-item&quot; &gt;</span><br><span class="line">                &lt;div &gt;&lt;/div&gt;</span><br><span class="line">                &lt;div style=&quot;background: url(icons/folder@2x.png) no-repeat content-box center;&quot;&gt;&lt;/div&gt;</span><br><span class="line">                &lt;div &gt;&lt;/div&gt;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                    &lt;span &gt;文件夹&lt;/span&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div  style=&quot;width:249px;height: 3px;margin: 8px 0px;&quot;&gt;</span><br><span class="line">                &lt;div style=&quot;border:1px solid #dddddd;width:190px;height:1px;position: relative;margin: 0 auto;&quot;&gt;&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">             &lt;div class=&quot;drop-list-item&quot;&gt;</span><br><span class="line">                &lt;div &gt;&lt;/div&gt;</span><br><span class="line">                &lt;div style=&quot;background: url(icons/upload@2x.png) no-repeat content-box center;&quot;&gt;&lt;/div&gt;</span><br><span class="line">                &lt;div &gt;&lt;/div&gt;</span><br><span class="line">                &lt;div &gt;</span><br><span class="line">                    &lt;span &gt;导入&lt;/span&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    document.getElementsByClassName(&quot;drop-list-btn&quot;)[0].onclick = function (evt) &#123;</span><br><span class="line">        var ele = document.getElementsByClassName(&quot;drop-list&quot;)[0];</span><br><span class="line">        if (ele.style.display==&quot;none&quot;)&#123;</span><br><span class="line">            ele.style.display=&quot;block&quot;;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            ele.style.display=&quot;none&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="img/jianjiao/1.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; CSS 实现尖角样式&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yatsov.github.io/categories/front-end/"/>
    
    
      <category term="CSS" scheme="http://yatsov.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>MySQL复制即相关维护</title>
    <link href="http://yatsov.github.io/mysql/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6.html"/>
    <id>http://yatsov.github.io/mysql/MySQL主从复制.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T07:07:46.187Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL复制即相关维护<br><a id="more"></a></p><p>##　MySQL复制原理及简介</p><h3 id="1-复制的优点"><a href="#1-复制的优点" class="headerlink" title="1 复制的优点"></a>1 复制的优点</h3><blockquote><p>如果主库出现问题，可以快速切换到从库。<br>可以再从从库上执行查询操作，降低主库的访问压力。<br>可以在从库上实现备份，避免备份期间影响主库服务。</p></blockquote><h3 id="2-复制流程概述"><a href="#2-复制流程概述" class="headerlink" title="2 复制流程概述"></a>2 复制流程概述</h3><p>1 首先，MySQL主库在事务提交时会把数据变更作为时间Events记录在二进制日志文件Binlog中；MySQL主库上的sync_binlog控制binlog日志刷新到磁盘。  </p><blockquote><p>当这个值是0或者1 的时候这个延时是由binlog_group_commit_sync_delay（即磁盘上等待多长时间统一提交）指定的。而次数大于n的时候意思是每n此提交。源自MySQL5.7文档</p></blockquote><p>2 主库推送二进制日志文件Binlog中的事件到从库的中继日志Relay Log，之后从库根据中级日志重做数据变更操作，最终达到主从一直的目的。</p><p>3 MySQL通过三个线程来完成主从库之间的数据复制：Binlog Dump线程跑在主库上，I/O线程和SQL线程跑在从库上。当从库启动复制的时候，首先创建i/O线程连接主库，主库随后创建Binlog Dump线程读取数据库时间发送给I/O线程，I/O线程获取到事件数据后更新到中继日志中去，之后从库的SQL线程读取中继日志中的更新并运用。</p><blockquote><p>show processlist可以查看主库上的Binlog Dump线程<br>show slave status 可以查看从库复制状态</p></blockquote><h3 id="3-Binlog-三种复制方式"><a href="#3-Binlog-三种复制方式" class="headerlink" title="3 Binlog 三种复制方式"></a>3 Binlog 三种复制方式</h3><p>1、Statement基于SQL语句级别的Binlog，每条修改数据的SQL都会保存。<br>2、Row基于行级别，记录每一行数据的变化。不会因为存储过程或者触发器造成主从库不一致，但是记录日志量会比上一个大很多。<br>3、Mixed,混合Statement和Row模式默认情况下采用Statement模式某些情况下采用Row。</p><blockquote><p>使用binlog-format 变量记录,更改设置方法<br>set global binlog_format = ‘Row’如果没有global则是当前session。<br>show binlog events 可以查看Update操作在Binlog日志文件中对应的位置。</p></blockquote><h3 id="4-常见架构"><a href="#4-常见架构" class="headerlink" title="4 常见架构"></a>4 常见架构</h3><p>1 一主多从<br>2 多级复制 减小主机压力</p><blockquote><p>可以使用BLACKHOLE引擎来降低多级复制的延时，他的操作仅在Binlog里面记录。<br>3 双主架构，避免了从库的额外工作。</p></blockquote><h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><p>1 首先尽量保证版本一致且版本最新。（我是5.6 5.7 成功但是还是建议版本号越近越新越好。)</p><p>2 在主库上设置使用账户给予REPLICATION SLAVE权限</p><blockquote><p>GRANT REPLICATION SLAVE ON <em>.</em> to ‘repl‘@’ip地址’ identified by ‘password’;</p></blockquote><p>3 修改主库上的my.cnf配置文件开启binlog设置server-id<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server-id=1   //给数据库服务的唯一标识，一般为大家设置服务器Ip的末尾号</span><br><span class="line">log-bin=master-bin</span><br><span class="line">log-bin-index=master-bin.index</span><br><span class="line">``` </span><br><span class="line">4 封住主库避免修改影响主从同步。</span><br><span class="line">&gt;flush tables with read lock;</span><br><span class="line"></span><br><span class="line">5 得到主库当前的二进制日志名和偏移量值。**并记录下来**</span><br><span class="line">&gt;show master status;</span><br><span class="line"></span><br><span class="line">6 主从复制保持同步。并解锁。</span><br><span class="line"></span><br><span class="line">7 配置从库</span><br></pre></td></tr></table></figure></p><p>server-id=2<br>relay-log-index=slave-relay-bin.index<br>relay-log=slave-relay-bin<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8 创建到主库的连接</span><br></pre></td></tr></table></figure></p><p>change master to master_host=’192.168.0.104’, //Master 服务器Ip<br>master_port=3306,<br>master_user=’repl’,<br>master_password=’mysql’,<br>master_log_file=’master-bin.000001’,//Master服务器产生的日志<br>master_log_pos=0;<br><code>`</code><br>9 在从库上启动slave线程</p><blockquote><p>start slave;</p></blockquote><p>10 之后就可以在主库上插入点数据看看啦~~~测试是否成功</p><h2 id="其它配置"><a href="#其它配置" class="headerlink" title="其它配置"></a>其它配置</h2><p>log-slave-updates<br>用来配置从库的更新是否写入二进制文件，以便将其作为其他的主库。<br>master-connect-retry<br>用来设置和主库的连接丢失重试的时间间隔，默认是60s<br>read-only<br>只允许超级用户更新操作。<br>replicate0do-db、replicate-do-table、replicate-ignore-db、replicate-ignore-table<br>表示记录的表以及忽略的表在binlog中</p><h2 id="日常维护"><a href="#日常维护" class="headerlink" title="日常维护"></a>日常维护</h2><p>1、 查看从库状态</p><blockquote><p>show slave status<br>进程 Slave_IO_Running :从此进程负责的从库和主库上读取BINLOG日志，并写入从库上的中继日志。<br>进程 Slave_SQL_Running 此进程负责读取并执行中继日志中的binlog日志。</p></blockquote><p>2、主从同步维护<br>由于双机性能不同可能导致主从性能不同，同步不同。<br>1、主库上首先阻止读入。</p><blockquote><p>FLUSH TABLESWITH READ LOCK<br>2、在从库上使用MASTER_POS_WAIT()函数的参数是钱买步骤中得到的日志位置值。<br>select MASTER_POS_WAIT(‘日志名’,’位置值’)<br>这个日志会阻塞知道从库抵达该位置，返回0.如果返回-1则代表超时。<br>3、UNLOCK解锁。<br>UNLOCK TABLES</p></blockquote><p>3、复制出错<br>如果复制出现问题首先确认是不素食表结构不一致导致的，如果是则修改表结构到一致 。<br>如果不是那么是某一句话出现的问题可以采用忽略这句话，或者是不将其记录到log中在在从库中进行操作保证服主从同步。</p><p>4、查看从库复制进度<br>使用show processlist 列表中的Slave_SQL_Running 线程的time进行比较。<br>也可以用show slave status查看从库落后主库的事件。（Seconds_Behind_Master）<br>另外为了提高从库复制效率还可以将主库的数据库分别复制到不同的从库上分担性能。也就是一个数据库中只负责主库的几个数据库。</p><p>5、主从切换<br>1、首先确保所有的从库都已经执行了relay log中的全部更新，在每个从苦涩，执行STOP SLAVE IO_THREAD然后检查SHOW PROCESSLIST的输出知道状态都是 Has read all relay log。<br>2、在从库A1上，执行STOP SLAVE以停止服务，然后执行RESET MASTER以重置成主数据库；<br>3、在其余数据库上执行STOP SLAVE以停止服务，然后执行CHANGE MASTER TO MASTER_HOST =’S1’重新设置主库，在执行START SLAVE以启动复制。<br>4、通知所有的客户端将主库指向S1。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL复制即相关维护&lt;br&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://yatsov.github.io/categories/DB/"/>
    
    
      <category term="MySQL" scheme="http://yatsov.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>line-height和vertial-align学习笔记</title>
    <link href="http://yatsov.github.io/CSS/%E5%AD%A6%E4%B9%A0line-height%E5%92%8Cvertial-align%E7%AC%94%E8%AE%B0.html"/>
    <id>http://yatsov.github.io/CSS/学习line-height和vertial-align笔记.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T11:05:59.932Z</updated>
    
    <content type="html"><![CDATA[<p>学习line-height 和 vertial-align<br><a id="more"></a></p><h2 id="1-line-height"><a href="#1-line-height" class="headerlink" title="1 line-height"></a>1 line-height</h2><p>一个div元素的高度其本质上是由line-height属性决定的下面做实验。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;&lt;/title&gt;</span><br><span class="line">  &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">  &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">    p:nth-child(1)&#123;</span><br><span class="line">        background-color: #E31010;</span><br><span class="line">        font-size: 26px;</span><br><span class="line">        line-height: 10px;</span><br><span class="line">        /*overflow: hidden;*/</span><br><span class="line">    &#125;</span><br><span class="line">    p:nth-child(2)&#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        line-height: 26px;</span><br><span class="line">        background-color: #00FF24;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p &gt;1111111111111111111111&lt;/p&gt;</span><br><span class="line">&lt;p &gt;1111111111111111111111&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p><img src="img/3/1.png" alt="CSS-lineheight1"></p><p>我们可以看到当font-size大于line-height的时候溢出需要overflow处理验证了这一点，但是另外一方面font-size有时候也决定了line-height(例如:1em)。我们能够看到绿色的字上下都有距离，这是行距:</p><blockquote><p>行距=’line-height’-‘font-size’</p></blockquote><p>所以一行元素使用vertical-align能够居中因为上下行距相等所以近似使其上下居中，但是为什么是近似相等因为。vertical-align是在基线上与等分析按之间的距离基本上是X的高度所以不同的字体不一样。因此是近似居中。</p><h2 id="2-line-height的一些细节"><a href="#2-line-height的一些细节" class="headerlink" title="2 line-height的一些细节"></a>2 line-height的一些细节</h2><h3 id="属性值"><a href="#属性值" class="headerlink" title="属性值"></a>属性值</h3><p>line-height的默认值是normal,但是不同字体以及不同浏览器的line-height的值都是不一样的。</p><p>line-height具有数值、百分比、长度值三种属性。他们在继承上有细微的差别，如果使用数值作为属性值那么所有属性值得继承都是这个值。但是如果使用其他的值则是在子元素计算之后得出的值。</p><p>###line-height的大值特性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;&lt;/title&gt;</span><br><span class="line">  &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">  &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">    .box&#123;</span><br><span class="line">      line-height: 96px;</span><br><span class="line">      background-color: #00FF05;</span><br><span class="line">    &#125;</span><br><span class="line">    .box span&#123;</span><br><span class="line">      line-height: 20px;</span><br><span class="line">      background-color: #FF00BF;</span><br><span class="line">    &#125;</span><br><span class="line">    .box2&#123;</span><br><span class="line">      line-height: 20px;</span><br><span class="line">      background-color: #00FF05;</span><br><span class="line">    &#125;</span><br><span class="line">    .box2 span&#123;</span><br><span class="line">      line-height: 96px;</span><br><span class="line">      background-color: #FF00BF;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;box&quot;&gt;</span><br><span class="line">  &lt;span&gt;内容...&lt;/span&gt;  </span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;box2&quot;&gt;</span><br><span class="line">  &lt;span&gt;内容...&lt;/span&gt;  </span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p><img src="img/3/2.png" alt=""></p><p>我们可以看到两个外部box元素都是96，那么box2类下面的属性如何来理解呢。主要是因为无论内联元素的line-height如何进行设置，最终父级元素的高度都是由数值最大的那个line-height。上面的情况根据我的理解，每个内联元素都是会有一个空白节点在内联元素的前面，内部的span高度为96px时，那个空白节点则变为96px将其撑开。</p><h2 id="vertial-align"><a href="#vertial-align" class="headerlink" title="vertial-align"></a>vertial-align</h2><p>内联元素默认都是沿着字母x的下边缘对齐的，对于图片等替换元素则是底部。在CSS中vertical-align的属性百分比则是基于line-height进行计算的。</p><blockquote><p>注：vertial-align只能应用于内联元素以及dispaly为table-cell的元素。</p></blockquote><h3 id="图片底部的间隙"><a href="#图片底部的间隙" class="headerlink" title="图片底部的间隙"></a>图片底部的间隙</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">    .box&#123;</span><br><span class="line">      width: 280px;</span><br><span class="line">      outline: 1px solid #aaa;</span><br><span class="line">      text-align: center;</span><br><span class="line">      /*font-size: 0px;*/</span><br><span class="line">    &#125;</span><br><span class="line">    .box &gt;img&#123;</span><br><span class="line">      height: 96px;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;div class=&quot;box&quot;&gt;</span><br><span class="line">  &lt;img src=&quot;截图1.png&quot;&gt; </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><img src="img/3/3.png" alt=""><br>如图所示图片的底部出现了一个缝隙，原因就在于内联元素的前面存在的空白节点，他的基线并不是底部导致会存在一个缝隙。</p><h4 id="解决方案如下"><a href="#解决方案如下" class="headerlink" title="解决方案如下:"></a>解决方案如下:</h4><p>1、图片块状化<br>2、容器line-height足够小<br>3、容器font-size足够小<br>4、设置其他的vertial-align值</p><h2 id="inline-block与vertical-align"><a href="#inline-block与vertical-align" class="headerlink" title="inline-block与vertical-align"></a>inline-block与vertical-align</h2><p>一个inline-block元素，如果里面没有内联元素，或者overflow不是visible，则该园区的基线就是其margin底边缘；否则其基线就是元素里面的最后一行内联元素的基线。</p><p>##参考<br>张鑫旭 CSS世界</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习line-height 和 vertial-align&lt;br&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yatsov.github.io/categories/front-end/"/>
    
    
      <category term="CSS" scheme="http://yatsov.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>前端绘制地图中的地理坐标到屏幕坐标转换的简单思路--放大、缩小、移动</title>
    <link href="http://yatsov.github.io/algorithm/JS%E5%89%8D%E7%AB%AF%E7%BB%98%E5%88%B6%E5%9C%B0%E5%9B%BE%E6%80%9D%E8%B7%AF%E5%AE%9E%E7%8E%B0.html"/>
    <id>http://yatsov.github.io/algorithm/JS前端绘制地图思路实现.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T10:09:28.547Z</updated>
    
    <content type="html"><![CDATA[<p>前端绘制地图中的地理坐标到屏幕坐标转换的简单思路–放大、缩小、移动。目的是解决前端绘制地图中存在的问题。<br><a id="more"></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>为了让自己熟悉地图的绘制，我想手绘一个地图如何绘制的工具。使用了zrender库，这是一个canvas库，Echart基于此做。数据的来源则是一个geojson文件。下面就要解决一下如何进行绘制的问题包括：<br>1、地理坐标如何与屏幕坐标转换。<br>2、如何放大、缩小。<br>3、如何移动。</p><h2 id="问题1-地理坐标系与屏幕坐标系如何进行转换"><a href="#问题1-地理坐标系与屏幕坐标系如何进行转换" class="headerlink" title="问题1 地理坐标系与屏幕坐标系如何进行转换"></a>问题1 地理坐标系与屏幕坐标系如何进行转换</h2><p>这里面我们是读取一个矢量数据在地图上绘制出来，思路如下：<br>0、明确浏览器坐标系是屏幕坐标系原点在左上角，地理坐标系原点是坐标系的原点。<br>1、找到屏幕坐标系的方框和地理坐标系的方框，找到屏幕坐标系的高度和地理坐标系的高度计算缩放比。</p><blockquote><p>注：这里的缩放比，我是按照简单的思路来的，其实应该是选择最小的那个，然后将坐标挪到中间。</p></blockquote><p>2、有了缩放比之后就明确了，地理坐标系和屏幕坐标系之间的缩放关系，之后开始计算地理坐标系在屏幕上的坐标。如图根据此点到左边的距离和到顶部的距离之后乘以缩放参数就会得到此点的屏幕坐标。<br><img src="1/1.png" alt="如何从地理坐标计算到屏幕坐标"><br>3、转换完屏幕坐标之后就可以绘制了。如果初始时有默认的缩放级别参照下面的缩放算一下就行。</p><h2 id="问题2-如何放到缩小"><a href="#问题2-如何放到缩小" class="headerlink" title="问题2 如何放到缩小"></a>问题2 如何放到缩小</h2><h3 id="1-如何确定放大缩小系数"><a href="#1-如何确定放大缩小系数" class="headerlink" title="1 如何确定放大缩小系数"></a>1 如何确定放大缩小系数</h3><p>这里使用了mousewheel事件直接绑定在了zrender对象上。这里要处理的是<strong>缩放系数</strong>缩放系数也就是放大和缩小的倍数。 使用evt.wheelDelta参数大于0代表放大小于0代表缩小。通过这样计算出缩放系数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var x = evt.offsetX;</span><br><span class="line">var y = evt.offsetY;//距离容器</span><br><span class="line">var scalefactor = 1.2;</span><br><span class="line">evt.wheelDelta = evt.wheelDelta ? evt.wheelDelta : (evt.deltalY * (-40));  //获取当前鼠标的滚动情况</span><br><span class="line">if (evt.wheelDelta &gt; 0) &#123;</span><br><span class="line">            scalefactor *= 2;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">            scalefactor /= 2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>参考 <a href="http://www.zhangxinxu.com/wordpress/2013/04/js-mousewheel-dommousescroll-event/" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/2013/04/js-mousewheel-dommousescroll-event/</a></p></blockquote><h3 id="2-如何放大缩小"><a href="#2-如何放大缩小" class="headerlink" title="2 如何放大缩小"></a>2 如何放大缩小</h3><p>这里面的思路是：<br>1、直接将地理信息数据每个坐标乘以放大系数得到新的坐标但是这个坐标是向外扩展的，所以还要纠正回去、<br>2、计算鼠标缩放的原点的坐标与缩放之后的原点坐标的差值，作为纠正值，向原点纠正纠正之后放大缩小完成。</p><h2 id="问题3-如何移动"><a href="#问题3-如何移动" class="headerlink" title="问题3 如何移动"></a>问题3 如何移动</h2><p>主要思路 :<br>1、 使用事件mouseup和mousedown。<br>2、 计算两个事件的坐标差然后将数据坐标计算即可。</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="1/2.gif" alt="如何从地理坐标计算到屏幕坐标"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>效果简单但是还有很大的提升空间,解决了主要的问题剩下的还可以精进。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">&apos;手动实现的一个小地图&apos;</span><br><span class="line">function CanvasMap(render,mapdata)&#123;</span><br><span class="line">    this.render = render;</span><br><span class="line">    this.mapdata=mapdata;</span><br><span class="line">    this.bound = this.returnMinXY(mapdata);</span><br><span class="line">    console.log(mapdata,this.bound)</span><br><span class="line">    var _my = this;</span><br><span class="line">    var x1,y1,x2,y2;</span><br><span class="line">    this.render.on(&quot;mousedown&quot;,function(evt)&#123;</span><br><span class="line">        x1 = evt.offsetX;</span><br><span class="line">        y1 = evt.offsetY;</span><br><span class="line">    &#125;);</span><br><span class="line">    this.render.on(&quot;mouseup&quot;,function(evt)&#123;</span><br><span class="line">        x2 = evt.offsetX;</span><br><span class="line">        y2 = evt.offsetY;</span><br><span class="line">        var xfactor = x2-x1;</span><br><span class="line">        var yfactor = y2-y1;</span><br><span class="line">        _my.render.clear();</span><br><span class="line">        _my.move(_my.mapdata,xfactor,yfactor);</span><br><span class="line">        for (var i=0;i&lt;_my.mapdata.features.length;i++)&#123;</span><br><span class="line">            _my.addgeometry(_my.mapdata.features[i],false);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    this.render.on(&quot;mousewheel&quot;,function(evt)&#123;</span><br><span class="line">        //  console.log(evt);</span><br><span class="line">        var x = evt.offsetX;</span><br><span class="line">        var y = evt.offsetY;//距离容器</span><br><span class="line">        var scalefactor = 1.2;</span><br><span class="line">        evt.wheelDelta = evt.wheelDelta ? evt.wheelDelta : (evt.deltalY * (-40));  //获取当前鼠标的滚动情况</span><br><span class="line">        if (evt.wheelDelta &gt; 0) &#123;</span><br><span class="line">            scalefactor *= 2;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            scalefactor /= 2;</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(evt.wheelDelta)</span><br><span class="line">        var sx = scalefactor*x;</span><br><span class="line">        var sy = scalefactor*y;</span><br><span class="line">        var sdisx =sx-x;</span><br><span class="line">        var sdisy = sy-y;</span><br><span class="line">        _my.sacle(_my.mapdata,scalefactor,sdisx,sdisy);</span><br><span class="line">        _my.render.clear();</span><br><span class="line">        for (var i=0;i&lt;_my.mapdata.features.length;i++)&#123;</span><br><span class="line">            _my.addgeometry(_my.mapdata.features[i],false);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * @param &#123;一个geojson文件的对象&#125; obj </span><br><span class="line"> */</span><br><span class="line">CanvasMap.prototype.returnMinXY=function(obj)&#123;</span><br><span class="line">    var factor = 20;</span><br><span class="line">    var features = obj.features,feature = null,coor = null;</span><br><span class="line">    var t = features[0].geometry.coordinates;</span><br><span class="line">    var minx=t[0][0][0],miny=t[0][0][1],maxx=t[0][0][0],maxy=t[0][0][1];</span><br><span class="line">    for (var z=0;z&lt;features.length;z++)&#123;</span><br><span class="line">        feature=features[z];</span><br><span class="line">        coor = feature.geometry.coordinates;</span><br><span class="line">        for (var i=0;i&lt;coor.length;i++)&#123;</span><br><span class="line">            for (var j=0;j&lt;coor[i].length;j++)&#123;</span><br><span class="line">                var coo = coor[i][j];</span><br><span class="line">                if (minx &gt;coo[0]  )&#123;</span><br><span class="line">                    minx = coo[0];</span><br><span class="line">                &#125;</span><br><span class="line">                if (maxx &lt;coo[0])&#123;</span><br><span class="line">                    maxx = coo[0];</span><br><span class="line">                &#125;</span><br><span class="line">                if (miny &gt;coo[1])&#123;</span><br><span class="line">                    miny = coo[1];</span><br><span class="line">                &#125;</span><br><span class="line">                if (maxy &lt;coo[1])&#123;</span><br><span class="line">                    maxy = coo[1];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return &#123;</span><br><span class="line">        minx:minx,</span><br><span class="line">        miny:miny,</span><br><span class="line">        maxx:maxx,</span><br><span class="line">        maxy:maxy</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * 坐标转换</span><br><span class="line"> * 函数思路是这个样子的</span><br><span class="line"> * 首先找出这里面的最左上角的坐标</span><br><span class="line"> * 之后minx maxy</span><br><span class="line"> * 之后算出点坐标与 左上角点的距离也就是曼哈顿距离 dx dy </span><br><span class="line"> * 之后把距离扩大扩大的factor为宽度的比</span><br><span class="line"> * @param &#123;*&#125; geometry </span><br><span class="line"> * @param &#123;*&#125; bound </span><br><span class="line"> */</span><br><span class="line">CanvasMap.prototype.changecoordinate = function(geometry,bound)&#123;</span><br><span class="line">  // 获取外界矩形</span><br><span class="line">  var factor = 400/(bound.maxy-bound.miny);//获取外边界</span><br><span class="line">  var minx=bound.minx,miny=bound.miny,maxx=bound.maxx,maxy=bound.maxy;</span><br><span class="line">  // //获得了外接矩形</span><br><span class="line"></span><br><span class="line">  var coor = geometry.coordinates;</span><br><span class="line">  var disx = 0,disy = 0;</span><br><span class="line">  for (var i=0;i&lt;coor.length;i++)&#123;</span><br><span class="line">      for (var j=0;j&lt;coor[i].length;j++)&#123;</span><br><span class="line">          var coo =  coor[i][j];</span><br><span class="line">         disx = coo[0]-minx;</span><br><span class="line">         disy = maxy - coo[1];</span><br><span class="line">         coor[i][j][0]=disx*factor;</span><br><span class="line">         coor[i][j][1]=disy*factor;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CanvasMap.prototype.addgeometry = function(data,change)&#123;</span><br><span class="line">    var bound = this.bound;</span><br><span class="line">    var geometry = [];</span><br><span class="line">    if (change!=false)&#123;</span><br><span class="line">        this.changecoordinate(data.geometry,bound);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    var polygon = new zrender.Polygon(&#123;</span><br><span class="line">        shape: &#123;</span><br><span class="line">            points:data.geometry.coordinates[0]</span><br><span class="line">        &#125;,</span><br><span class="line">        style: &#123;</span><br><span class="line">            fill: &apos;none&apos;,</span><br><span class="line">            stroke: &apos;#c93756&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    this.render.add(polygon);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * @param &#123;*&#125; data </span><br><span class="line"> * @param &#123;*&#125; xfactor </span><br><span class="line"> * @param &#123;*&#125; yfactor </span><br><span class="line"> */</span><br><span class="line">CanvasMap.prototype.move=function(data,xfactor,yfactor)&#123;</span><br><span class="line">    console.log(&quot;move !!!!!!&quot;)</span><br><span class="line">    for (var i=0;i&lt;data.features.length;i++)&#123;</span><br><span class="line">        var feature = data.features[i];</span><br><span class="line">        movesingle(feature.geometry,xfactor,yfactor);</span><br><span class="line">    &#125;</span><br><span class="line">    function movesingle (geometry,xfactor,yfactor)&#123;</span><br><span class="line">        var coor = geometry.coordinates;</span><br><span class="line">        var disx = 0,disy = 0;</span><br><span class="line">        for (var i=0;i&lt;coor.length;i++)&#123;</span><br><span class="line">            for (var j=0;j&lt;coor[i].length;j++)&#123;</span><br><span class="line">                coor[i][j][0]=coor[i][j][0]+xfactor;</span><br><span class="line">                coor[i][j][1]=coor[i][j][1]+yfactor;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 放大</span><br><span class="line"> */</span><br><span class="line">CanvasMap.prototype.sacle = function(data,scalefactor,sdisx,sdisy)&#123;</span><br><span class="line">    for (var i=0;i&lt;data.features.length;i++)&#123;</span><br><span class="line">        var feature = data.features[i];</span><br><span class="line">        scalesingle(feature.geometry,scalefactor,sdisx,sdisy);</span><br><span class="line">    &#125;</span><br><span class="line">    function scalesingle (geometry,scalefactor)&#123;</span><br><span class="line">        var coor = geometry.coordinates;</span><br><span class="line">        var disx = 0,disy = 0;</span><br><span class="line">        for (var i=0;i&lt;coor.length;i++)&#123;</span><br><span class="line">            for (var j=0;j&lt;coor[i].length;j++)&#123;</span><br><span class="line">                coor[i][j][0]=coor[i][j][0]*scalefactor-sdisx;</span><br><span class="line">                coor[i][j][1]=coor[i][j][1]*scalefactor-sdisy;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前端绘制地图中的地理坐标到屏幕坐标转换的简单思路–放大、缩小、移动。目的是解决前端绘制地图中存在的问题。&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yatsov.github.io/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="http://yatsov.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>坐标系统及地图投影</title>
    <link href="http://yatsov.github.io/gis/%E5%9D%90%E6%A0%87%E7%B3%BB%E7%BB%9F%E5%8F%8A%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1.html"/>
    <id>http://yatsov.github.io/gis/坐标系统及地图投影.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T11:05:16.396Z</updated>
    
    <content type="html"><![CDATA[<p>坐标系统及地图投影<br><a id="more"></a></p><h2 id="坐标系"><a href="#坐标系" class="headerlink" title="坐标系"></a>坐标系</h2><p>WGS84<br>CGS2000</p><h2 id="投影"><a href="#投影" class="headerlink" title="投影"></a>投影</h2><h3 id="1-高斯克吕格投影"><a href="#1-高斯克吕格投影" class="headerlink" title="1 高斯克吕格投影"></a>1 高斯克吕格投影</h3><p>高斯克吕格投影是一个<strong>横切等角椭圆柱投影</strong>。<br>特点：<br>1）中央经线上没有长度变形；<br>2）在同一条纬线上，离中央经线越远变形越大；<br>3）在同一条经线上，纬度越低变形越大。<br>为了保证精度采用分带投影的方法。<br>规定：1：2.5万-1：50万采用6度分带。<br>大于1：1万采用3°分带法。<br>三度带是从一度三十分开始这样让他们的中线在一样的位置。</p><blockquote><p>注：高斯投影直角坐标系与笛卡尔直角坐标系有不同。</p></blockquote><h3 id="兰伯特投影"><a href="#兰伯特投影" class="headerlink" title="兰伯特投影"></a>兰伯特投影</h3><p>兰伯特投影为<strong>正轴等角割圆锥投影</strong>。<br>在标准纬线之上越向上变形越大。</p><h3 id="墨卡托投影、web墨卡托投影"><a href="#墨卡托投影、web墨卡托投影" class="headerlink" title="墨卡托投影、web墨卡托投影"></a>墨卡托投影、web墨卡托投影</h3><p><strong>正轴等角圆柱投影</strong>，墨卡托投影大圆航线。<br>特点：等角</p><h3 id="UTM投影"><a href="#UTM投影" class="headerlink" title="UTM投影"></a>UTM投影</h3><p>割的不一样从两极的园开始割。</p><h2 id="地图服务"><a href="#地图服务" class="headerlink" title="地图服务"></a>地图服务</h2><h4 id="WMS种类与操作"><a href="#WMS种类与操作" class="headerlink" title="WMS种类与操作"></a>WMS种类与操作</h4><p>比起WFS，WMS的操作要简单的多：</p><ol><li>GetCapabilities（获取服务中的要素类及支持的操作）</li><li>GetMap（获取地图）</li><li>GetFeatureInfo（根据地图上的像素点获取更详细的要素信息，类似Identify功能）<br>同样，这些操作并不是必须全部实现，而是实现全部或部分。根据所支持的操作不同，WMS可以分为2类：</li><li>Basic WMS（就是最常被提及的WMS，必须支持GetCapabilities/ GetMap操作）</li><li>Queryable WFS（必须在Basic WMS基础上加上GetFeatureInfo操作）<br>关于服务涉及的基本元素，可以参考前面的章节：《服务涉及的基本元素》。WMS中只规定了KVP格式的请求，因此下面介绍一下WMS的请求和响应内容。</li></ol><h4 id="WMTS瓦片"><a href="#WMTS瓦片" class="headerlink" title="WMTS瓦片"></a>WMTS瓦片</h4><p>WMTS只是瓦片，获得的时候要写上瓦片的行列号<br>在一个WMTS服务中包括以下3个操作：</p><ol><li><p>GetCapabilities（获取服务的元信息）</p></li><li><p>GetTile（获取切片）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">http://www.maps.bob/maps.cgi?</span><br><span class="line">service=WMTS&amp;</span><br><span class="line">request=GetTile&amp;</span><br><span class="line">version=1.0.0&amp;</span><br><span class="line">layer=etopo2&amp;</span><br><span class="line">style=default&amp;</span><br><span class="line">format=image/png&amp;</span><br><span class="line">TileMatrixSet=WholeWorld_CRS_84&amp;</span><br><span class="line">TileMatrix=10m&amp;</span><br><span class="line">TileRow=1&amp;</span><br><span class="line">TileCol=3</span><br></pre></td></tr></table></figure></li><li><p>GetFeatureInfo（可选，获取点选的要素信息）</p></li></ol><h4 id="WCS-网络地理场数据服务"><a href="#WCS-网络地理场数据服务" class="headerlink" title="WCS 网络地理场数据服务"></a>WCS 网络地理场数据服务</h4><p>WCS包括以下3个操作：</p><ol><li><p>GetCapabilities（获取服务的元信息）</p></li><li><p>DescribeCoverage（获取Coverage的描述信息）</p></li><li><p>GetCoverage（获取Coverage）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">http://server_address/path/script?</span><br><span class="line"></span><br><span class="line">service=WCS &amp;</span><br><span class="line"></span><br><span class="line">request=DescribeCoverage&amp;</span><br><span class="line"></span><br><span class="line">version=1.1.2 &amp;</span><br><span class="line"></span><br><span class="line">identifiers=Cov1,Cov2,Cov3</span><br></pre></td></tr></table></figure></li></ol><h4 id="WFS-服务"><a href="#WFS-服务" class="headerlink" title="WFS 服务"></a>WFS 服务</h4><p>要素服务<br>当一个客户端想要访问WFS服务时，一般会涉及到以下的流程：</p><ol><li><p>通过操作获取WFS服务支持的操作和要素类（Feature Type，可以理解为WFS中的数据集）。</p></li><li><p>（可能）通过操作获取WFS服务支持的要素类的定义。</p></li><li><p>客户端发送某个操作的请求。</p></li><li><p>WFS服务处理请求。</p></li><li><p>WFS服务返回处理的结果和状态。</p></li></ol><p>上面几个步骤中所提到的“操作”包括：</p><ol><li><p>GetCapabilities（获取服务中的要素类及支持的操作）</p></li><li><p>DescribeFeatureType（描述要素类的信息）</p></li><li><p>GetFeature（获取要素）</p></li><li><p>GetGmlObject（通过XLink获取GML对象）</p></li><li><p>Transaction（创建、更新、删除数据的事务操作）</p></li><li><p>LockFeature（在事务过程中锁定要素）</p></li></ol><h4 id="地名地址要素服务（WFS-G-："><a href="#地名地址要素服务（WFS-G-：" class="headerlink" title="地名地址要素服务（WFS-G)："></a>地名地址要素服务（WFS-G)：</h4><p><a href="http://www.opengeospatial.org/standards/wfs" target="_blank" rel="noopener">http://www.opengeospatial.org/standards/wfs</a></p><h4 id="地理处理Web服务（WPS）："><a href="#地理处理Web服务（WPS）：" class="headerlink" title="地理处理Web服务（WPS）："></a>地理处理Web服务（WPS）：</h4><p><a href="http://www.opengeospatial.org/standards/wps" target="_blank" rel="noopener">http://www.opengeospatial.org/standards/wps</a></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.cnblogs.com/rainbow70626/p/4379615.html" target="_blank" rel="noopener">https://www.cnblogs.com/rainbow70626/p/4379615.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;坐标系统及地图投影&lt;br&gt;
    
    </summary>
    
      <category term="GIS" scheme="http://yatsov.github.io/categories/GIS/"/>
    
    
      <category term="GIS" scheme="http://yatsov.github.io/tags/GIS/"/>
    
  </entry>
  
  <entry>
    <title>JS 实现堆排序</title>
    <link href="http://yatsov.github.io/algorithm/%E5%A0%86%E6%8E%92%E5%BA%8F.html"/>
    <id>http://yatsov.github.io/algorithm/堆排序.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T10:08:26.124Z</updated>
    
    <content type="html"><![CDATA[<p>JS 实现堆排序<br><a id="more"></a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>首先堆是一个二叉树，分为最大堆和最小堆。最大堆是代表每个父节点大于子节点，最小堆相反。在排序中堆是一个完全二叉树。<br>里面涉及了几个公式：</p><h3 id="几个公式"><a href="#几个公式" class="headerlink" title="几个公式"></a>几个公式</h3><p>一个二叉树完全二叉树他的节点计算公式为<br>parent(i) = floor(i/2);<br>ileft(i)=2i;<br>iright(i)=2i+1;<br>而数组中公式则是有变化<br>parent(i) = floor((i-1)/2);<br>ileft(i)=2i+1;<br>iright(i)=2(i+1);</p><h3 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a>主要思路</h3><p>首先先进行最大堆调整，之后将最大堆的顶部也就是最大的数挪到尾部。之后堆的大小缩小1，之后继续进行最大堆调整重复上面的步骤。</p><h3 id="最大堆的实现"><a href="#最大堆的实现" class="headerlink" title="最大堆的实现"></a>最大堆的实现</h3><p>注意下面的代码最大堆的实现就是从最后一个节点的父节点开始调整每颗子树当调整到头位置是调整完毕。</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//首先堆排序的时候的堆就是一个二叉树是一个完全二叉树</span><br><span class="line">//首选第一个问题 就是构造最大或者最小堆</span><br><span class="line">//这个问题要从底向上一点点的交换</span><br><span class="line">//然后看公式</span><br><span class="line">//一个二叉树完全二叉树他的节点计算公式为</span><br><span class="line">//parent(i) = floor(i/2);</span><br><span class="line">//ileft(i)=2i;</span><br><span class="line">//iright(i)=2i+1;</span><br><span class="line">//而数组中公式则是有变化</span><br><span class="line">//parent(i) = floor((i-1)/2);</span><br><span class="line">//ileft(i)=2i+1;</span><br><span class="line">//iright(i)=2(i+1);</span><br><span class="line">//有了公式之后的思路就变得简单了</span><br><span class="line">// 首先找到最后一个节点之后找到他的父节点之后开始在这颗树里面调整最大堆之后一步步向前推进即可这样最大堆构建完成</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">function getMaxHeap(array,i,heapSize) &#123;</span><br><span class="line">    var imax,ileft,iright;</span><br><span class="line">    while (true) &#123;</span><br><span class="line">        imax=i;</span><br><span class="line">        ileft=2*i+1;</span><br><span class="line">        iright=2*(i+1);</span><br><span class="line">        if (iLeft&lt;heapSize &amp;&amp; array[i]&lt;array[ileft])&#123;</span><br><span class="line">            imax=ileft;</span><br><span class="line">        &#125;</span><br><span class="line">        if (iright&lt;heapSize &amp;&amp; array[i]&lt;array[right])&#123;</span><br><span class="line">            imax=iright;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * 从 index 开始检查并保持最大堆性质</span><br><span class="line"> * @array</span><br><span class="line"> * @index 检查的起始下标</span><br><span class="line"> * @heapSize 堆大小</span><br><span class="line"> **/</span><br><span class="line">function maxHeapify(array, index, heapSize) &#123;</span><br><span class="line">    var iMax, iLeft, iRight;</span><br><span class="line">    while (true) &#123;</span><br><span class="line">        iMax = index;</span><br><span class="line">        iLeft = 2 * index + 1;</span><br><span class="line">        iRight = 2 * (index + 1);</span><br><span class="line">        if (iLeft &lt; heapSize &amp;&amp; array[index] &lt; array[iLeft]) &#123;</span><br><span class="line">            iMax = iLeft;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (iRight &lt; heapSize &amp;&amp; array[iMax] &lt; array[iRight]) &#123;</span><br><span class="line">            iMax = iRight;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (iMax != index) &#123;</span><br><span class="line">            swap(array, iMax, index);</span><br><span class="line">            index = iMax;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function swap(array, i, j) &#123;</span><br><span class="line">    var temp = array[i];</span><br><span class="line">    array[i] = array[j];</span><br><span class="line">    array[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function buildMaxHeap(array, heapSize) &#123;</span><br><span class="line">    var i,iParent = Math.floor((heapSize - 1) / 2);//找寻最后一个节点的父元素</span><br><span class="line">    for (i = iParent; i &gt;= 0; i--) &#123;</span><br><span class="line">        maxHeapify(array, i, heapSize);</span><br><span class="line">    &#125;</span><br><span class="line">    return array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function heap_sort(arr) &#123;</span><br><span class="line">    buildMaxHeap(arr,arr.length);</span><br><span class="line">    for (let i = arr.length-1; i &gt;0; i--) &#123;</span><br><span class="line">        swap(arr,0,i);</span><br><span class="line">        buildMaxHeap(arr,i);</span><br><span class="line">    &#125;</span><br><span class="line">    return arr;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var elements = [3, 1, 5, 7, 2, 4, 9, 6, 10, 8];</span><br><span class="line">console.log(heap_sort(elements));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JS 实现堆排序&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yatsov.github.io/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="http://yatsov.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS Server的跨域</title>
    <link href="http://yatsov.github.io/arcobject/ArcGIS%20Server%20%E7%9A%84%E8%B7%A8%E5%9F%9F%20.html"/>
    <id>http://yatsov.github.io/arcobject/ArcGIS Server 的跨域 .html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T11:10:16.765Z</updated>
    
    <content type="html"><![CDATA[<p>ArcGIS Server的跨域<br><a id="more"></a></p><h3 id="1-1-跨域的主要方式"><a href="#1-1-跨域的主要方式" class="headerlink" title="1.1 跨域的主要方式"></a>1.1 跨域的主要方式</h3><p>跨域方式主要有：1、jsoup 2、后台代理转接 3 CORS 4 windows.domain 设置为统一域名 5 windows.name 6 websocket</p><h3 id="1-2-tomcat的跨域设置"><a href="#1-2-tomcat的跨域设置" class="headerlink" title="1.2 tomcat的跨域设置"></a>1.2 tomcat的跨域设置</h3><p>在TOMCAT_HOME/conf/web.xml上的Web-APP 标签内即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;filter&gt; </span><br><span class="line">      &lt;filter-name&gt;CorsFilter&lt;/filter-name&gt; </span><br><span class="line">      &lt;filter-class&gt;org.apache.catalina.filters.CorsFilter&lt;/filter-class&gt;       </span><br><span class="line">  &lt;init-param&gt; </span><br><span class="line">        &lt;param-name&gt;cors.allowed.origins&lt;/param-name&gt;</span><br><span class="line">&lt;param-value&gt;*&lt;/param-value&gt;       </span><br><span class="line">  &lt;/init-param&gt;       </span><br><span class="line">  &lt;init-param&gt; </span><br><span class="line">        &lt;param-name&gt;cors.allowed.methods&lt;/param-name&gt; </span><br><span class="line">        &lt;param-value&gt;GET,POST,HEAD,OPTIONS,PUT&lt;/param-value&gt;       </span><br><span class="line">&lt;/init-param&gt;       </span><br><span class="line">&lt;init-param&gt; </span><br><span class="line">        &lt;param-name&gt;cors.allowed.headers&lt;/param-name&gt;         </span><br><span class="line">&lt;param-value&gt;Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers&lt;/param-value&gt;</span><br><span class="line">&lt;/init-param&gt;       </span><br><span class="line">&lt;init-param&gt; </span><br><span class="line">        &lt;param-name&gt;cors.exposed.headers&lt;/param-name&gt;         </span><br><span class="line">&lt;param-value&gt;Access-Control-Allow-Origin,Access-Control-Allow-Credentials&lt;/param-value&gt;</span><br><span class="line">&lt;/init-param&gt;       </span><br><span class="line">&lt;init-param&gt; </span><br><span class="line">        &lt;param-name&gt;cors.support.credentials&lt;/param-name&gt;</span><br><span class="line">&lt;param-value&gt;true&lt;/param-value&gt;</span><br><span class="line">&lt;/init-param&gt;       </span><br><span class="line">&lt;init-param&gt; </span><br><span class="line">        &lt;param-name&gt;cors.preflight.maxage&lt;/param-name&gt;</span><br><span class="line">&lt;param-value&gt;10&lt;/param-value&gt;       </span><br><span class="line">&lt;/init-param&gt;     </span><br><span class="line">&lt;/filter&gt; </span><br><span class="line">&lt;filter-mapping&gt; </span><br><span class="line">    &lt;filter-name&gt;CorsFilter&lt;/filter-name&gt;</span><br><span class="line">&lt;url-pattern&gt;/*&lt;/url-pattern&gt; </span><br><span class="line">&lt;/filter-mapping&gt;</span><br></pre></td></tr></table></figure></p><h3 id="1-3-ArcGIS-的tomcat的目录"><a href="#1-3-ArcGIS-的tomcat的目录" class="headerlink" title="1.3 ArcGIS 的tomcat的目录"></a>1.3 ArcGIS 的tomcat的目录</h3><p>&lt;ARCGIS_SERVER_HOME&gt;\framework\runtime\tomcat</p><h3 id="1-4-ArcGIS10-2-的CORS支持情况"><a href="#1-4-ArcGIS10-2-的CORS支持情况" class="headerlink" title="1.4 ArcGIS10.2 的CORS支持情况"></a>1.4 ArcGIS10.2 的CORS支持情况</h3><p>ArcGIS10.2 是支持CORS跨域的,如果你想操作ArcGIS Server 的API 只需要申请一个Token即可。</p><h3 id="1-5-JS示例"><a href="#1-5-JS示例" class="headerlink" title="1.5 JS示例"></a>1.5 JS示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">function init() &#123;</span><br><span class="line">       $.ajax(&#123;  </span><br><span class="line">           type: &apos;post&apos;,  </span><br><span class="line">           crossDomain: true,  </span><br><span class="line">           url: &apos;http://localhost:6080/arcgis/admin/services/ShengYang/SYaccident.MapServer/stop?token=S_F4FXH9JTcnvUiJVITeoNj_NdmeGUHfSoi2rqsRvuYaQQbbbiF5Fwk7HiWI9ruJ&apos;,  </span><br><span class="line">           data: &#123;  </span><br><span class="line">               f:&apos;json&apos;,</span><br><span class="line">           </span><br><span class="line">           &#125;,  </span><br><span class="line">           dataType:&apos;json&apos;,  </span><br><span class="line">           xhrFields: &#123;  </span><br><span class="line">               &apos;Access-Control-Allow-Origin&apos;: &apos;*&apos;</span><br><span class="line">           &#125;,  </span><br><span class="line">           success: function(data, textStatus, jqXHR)&#123;  </span><br><span class="line">               // console.log(&quot;getAllResponseHeaders:&quot;+jqXHR.getAllResponseHeaders());  </span><br><span class="line">               console.dir(data);  </span><br><span class="line">               // Backbone.history.navigate(&quot;#booklist&quot;,true);  </span><br><span class="line">           &#125;  </span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ArcGIS Server的跨域&lt;br&gt;
    
    </summary>
    
      <category term="GIS" scheme="http://yatsov.github.io/categories/GIS/"/>
    
    
      <category term="ArcGIS" scheme="http://yatsov.github.io/tags/ArcGIS/"/>
    
  </entry>
  
  <entry>
    <title>ArcGIS地图发布与数据切片</title>
    <link href="http://yatsov.github.io/arcobject/ArcGIS%E5%9C%B0%E5%9B%BE%E5%8F%91%E5%B8%83%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%88%87%E7%89%87%E6%96%87%E6%A1%A3.html"/>
    <id>http://yatsov.github.io/arcobject/ArcGIS地图发布与数据切片文档.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T11:10:28.476Z</updated>
    
    <content type="html"><![CDATA[<p>ArcGIS地图发布与数据切片<br><a id="more"></a></p><blockquote><p>下面介绍如何发布ArcGIS Server服务并对其进行切片</p></blockquote><h2 id="地图发布"><a href="#地图发布" class="headerlink" title="地图发布"></a>地图发布</h2><p>在发布服务之前首先要对地图服务按照标准进行数据整备，当一个MXD文档中的地图数据整备完毕之后就可以将，MXD文档发布为ArcGIS地图服务了。步骤如下：</p><p>1、首先点击 文件（File） (Share As) 服务Service 进入发布对话框</p><p><img src="media/3d75313d5a20cd8bd8becc0310517892.png" alt=""></p><p>图6.1</p><p>2、这里有三个选项<br>1）发布服务，如果是第一次发布就选择这个。2）发布为服务定义文件。3）覆盖一个已经存在的服务，如果是要覆盖原来的服务重新发布则选择这个。根据您的需要进行选择。</p><p><img src="media/09674bdf54cabc177dd52ae7e6510db6.png" alt=""></p><p>图6.2</p><p>3、这个面板上面的参数是选择服务器连接，这里就是要准备连接要发布的服务器。如果下拉菜单里没有选项，<br>那么点击右边的加号按钮。进行添加如图。之后选择连接以及服务名称进行下一步。</p><p><img src="media/de2f2314e6e2581aa71d574f96b02174.png" alt=""></p><p>图6.3</p><p><img src="media/f444a20127c20ccd35ff56904a3d0ed5.png" alt=""></p><p>图6.4</p><p><img src="media/6c1bd0111274f030e75b110cd2b0caa2.png" alt=""></p><p>图6.5</p><p>4、选择文件存放位置，如图所示。每个服务都可以放到一个文件夹下分类，如果没有文件夹可以重新创建一个。</p><p><img src="media/ef353da006c4c006711279cedc7c8dab.png" alt=""></p><p>图6.6</p><p>5、进入服务编辑面板，首先点击上面的</p><p><img src="media/e49c5f52d3789bae66da4f939534ad78.png" alt=""></p><p>工具进行检查。</p><p><img src="media/640381f990a0cde4f10fdd4512ab7b2d.png" alt=""></p><p>图6.7</p><p>这个面板负责勾选服务具有的属性，例如地图属性(Mapping)、WCS服务、WMS服务、Feature<br>Access服务（需要与数据库连接）等。根据需要进行选择。</p><p><img src="media/41bd3e63145cb6c4755918df13a4d018.png" alt=""></p><p>图6.8</p><p>6、进行瓦片规格设置，如图所示为缓存设置面板，用于切片服务的设置。根据图片上的提升，首先选择使用瓦片。之后在切片方案里面</p><p><img src="media/2c7db2c8b32db67ef7a2c94c098b9ed3.png" alt=""></p><p>选择我们已经准备好的切片方案加载</p><p><img src="media/0c2122dd4beb9346f8a3f110813d2c2f.png" alt=""></p><p>。之后根据数据需要在进行级别的选择。</p><p><img src="media/121e27d0f62b6cd6bbcc9a7245365e9d.png" alt=""></p><p>图6.9</p><p>7、在信息描述面板里面添加描述</p><p><img src="media/662ba81ed92627fb4b43173d4b61b933.png" alt=""></p><p>8、点击</p><p><img src="media/b9251a89dfe111a3db8a49fd5e2f33c2.png" alt=""></p><p>发布</p><h2 id="服务切片"><a href="#服务切片" class="headerlink" title="服务切片"></a>服务切片</h2><p>以上的步骤已经将一个服务发布到了ArcGIS<br>Server中，之后如果您刚才设置了瓦片切片，现在就需要切片。步骤如下：</p><p>1、打开ArcCatelog，寻找自己的刚才发布的服务。右键—>管理缓存进入管理切片对话框。</p><p><img src="media/5c29bf2fea524db1fcf8a06c7cc58503.png" alt=""></p><p>图7.1</p><p>2、如图所示为开始进行缓存的对话框。首先选择</p><p><img src="media/a5ee0008a069fe29b3eef177085f2a1e.png" alt=""></p><p>切片方式包括RECREATE_ALL_TILES（重新切片）、RECREATE_EMPTY_TILES（将空瓦片切片）、DELETE_TILES(删除瓦片)。三种根据需要进行选择。</p><p>3、之后确认其他参数无误，点击OK开始切片。右键点击</p><p><img src="media/ffe0a161e48f75534f622cdac17af49d.png" alt=""></p><p>可以查看缓存情况</p><p>。</p><p><img src="media/b7a0751d2a2f61d6f917943f4e97f11f.png" alt=""></p><p><img src="media/ab4ebfc0499de197522a3d50149bb5c8.png" alt=""></p><p>图7.2</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ArcGIS地图发布与数据切片&lt;br&gt;
    
    </summary>
    
      <category term="GIS" scheme="http://yatsov.github.io/categories/GIS/"/>
    
    
      <category term="ArcGIS" scheme="http://yatsov.github.io/tags/ArcGIS/"/>
    
  </entry>
  
  <entry>
    <title>关于ArcGIS如何点转线</title>
    <link href="http://yatsov.github.io/arcobject/ArcGIS%E7%82%B9%E4%B8%93%E7%BA%BF.html"/>
    <id>http://yatsov.github.io/arcobject/ArcGIS点专线.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T11:10:39.621Z</updated>
    
    <content type="html"><![CDATA[<p>关于ArcGIS如何点转线<br><a id="more"></a></p><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>我们将Excel数据导入ArcGIS之后都是以点的形式存在的，但是如果这些点是轨迹怎么办?那么就需要将点转换为轨迹。下面介绍步骤。</p><h2 id="1-导入数据"><a href="#1-导入数据" class="headerlink" title="1 导入数据"></a>1 导入数据</h2><p>首先将Excel导入，再次之前要进行数据整备，将飘出的点剔除，否则会出现大连线效果。非常难看。另外ArcGIS如果出现xlxs导入失败的情况请换成xls。</p><h2 id="2-使用Points-to-line工具"><a href="#2-使用Points-to-line工具" class="headerlink" title="2 使用Points to line工具"></a>2 使用Points to line工具</h2><p><img src="/img/2/1.png" alt="">;<br>打开Points to line 工具,如图</p><p><img src="/img/2/2.png" alt="">;</p><p>Input Feature :代表输入要素，从GDB中选择。</p><p>OutPut Feature Class :代表输出要素，放入GDB中。</p><p>Line Field :代表判断每条线的字段。</p><p>SortField :代表判断每条单独的线的顺序的字段。</p><h2 id="3-完成"><a href="#3-完成" class="headerlink" title="3 完成"></a>3 完成</h2><p>点击 OK工作就完成啦~~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于ArcGIS如何点转线&lt;br&gt;
    
    </summary>
    
      <category term="GIS" scheme="http://yatsov.github.io/categories/GIS/"/>
    
    
      <category term="ArcGIS" scheme="http://yatsov.github.io/tags/ArcGIS/"/>
    
  </entry>
  
  <entry>
    <title>面试问题整理</title>
    <link href="http://yatsov.github.io/other/%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86.html"/>
    <id>http://yatsov.github.io/other/面试问题整理.html</id>
    <published>2018-04-21T02:52:07.000Z</published>
    <updated>2018-04-21T10:59:39.939Z</updated>
    
    <content type="html"><![CDATA[<p>面试问题整理<br><a id="more"></a></p><h1 id="面试问题整理"><a href="#面试问题整理" class="headerlink" title="面试问题整理"></a>面试问题整理</h1><h3 id="1-overflow-实现省略号"><a href="#1-overflow-实现省略号" class="headerlink" title="1 overflow 实现省略号"></a>1 overflow 实现省略号</h3><p>首先overflow的常用属性：visible/hidden/scroll/auto/inherit<br>white-space:pre/pre-wrap/nowrap/pre-line/inherit；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        .ellipsis&#123;</span><br><span class="line">            white-space: nowrap;</span><br><span class="line">            text-overflow: ellipsis;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;p class=&quot;ellipsis&quot; style=&quot;width: 100px;&quot;&gt;111111111111111111111111111111111111111&lt;/p&gt;</span><br></pre></td></tr></table></figure></p><p>注意上面的代码最重要的是text-overflow:ellipsis;</p><h3 id="2-如何水平垂直居中"><a href="#2-如何水平垂直居中" class="headerlink" title="2 如何水平垂直居中"></a>2 如何水平垂直居中</h3><p>1 flex<br>2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.parent &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.child &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: 50%;</span><br><span class="line">  left: 50%;</span><br><span class="line">  transform: translate(-50%, -50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注意外部是relative<br>3 table布局<br>4 margin :0;注外部必须是块级元素</p><h3 id="3-简述position每个项"><a href="#3-简述position每个项" class="headerlink" title="3 简述position每个项"></a>3 简述position每个项</h3><p>1、static（静态定位）：默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right 或者 z-index 声明）。</p><p>2、relative（相对定位）：生成相对定位的元素，通过top,bottom,left,right的设置相对于其正常（原先本身）位置进行定位。可通过z-index进行层次分级。</p><blockquote><p>无论父级存在不存在，无论有没有TRBL，均是以父级的左上角进行定位，但是父级的Padding属性会对其影响。　　</p></blockquote><p>3、absolute（绝对定位）：生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。元素的位置通过 “left”, “top”, “right” 以及 “bottom” 属性进行规定。可通过z-index进行层次分级。</p><p>4、fixed（固定定位）：生成绝对定位的元素，相对于浏览器窗口进行定位。元素的位置通过 “left”, “top”, “right” 以及 “bottom” 属性进行规定。可通过z-index进行层次分级。</p><p>static与fixed的定位方式较好理解，在此不做分析。下面对应用的较多的relative和absolute进行分析：</p><h3 id="4-事件执行模型"><a href="#4-事件执行模型" class="headerlink" title="4 事件执行模型"></a>4 事件执行模型</h3><p>程序里面所有的任务，可以分成两类：同步任务（synchronous）和异步任务（asynchronous）。</p><p>同步任务是那些没有被引擎挂起、在主线程上排队执行的任务。只有前一个任务执行完毕，才能执行后一个任务。</p><p>异步任务是那些被引擎放在一边，不进入主线程、而进入任务队列的任务。只有引擎认为某个异步任务可以执行了（比如 Ajax 操作从服务器得到了结果），该任务（采用回调函数的形式）才会进入主线程执行。排在异步任务后面的代码，不用等待异步任务结束会马上运行，也就是说，异步任务不具有”堵塞“效应。</p><p>举例来说，Ajax 操作可以当作同步任务处理，也可以当作异步任务处理，由开发者决定。如果是同步任务，主线程就等着 Ajax 操作返回结果，再往下执行；如果是异步任务，主线程在发出 Ajax 请求以后，就直接往下执行，等到 Ajax 操作有了结果，主线程再执行对应的回调函数。</p><blockquote><p>注意主线程和任务队列，</p></blockquote><h3 id="5-settimeout-setinterval"><a href="#5-settimeout-setinterval" class="headerlink" title="5 settimeout setinterval"></a>5 settimeout setinterval</h3><blockquote><p><a href="https://m.jb51.net/article/99174.htm" target="_blank" rel="noopener">https://m.jb51.net/article/99174.htm</a></p></blockquote><h3 id="5-a-bind-b-bind-c-为什么后面绑定的是c-还没完全解决"><a href="#5-a-bind-b-bind-c-为什么后面绑定的是c-还没完全解决" class="headerlink" title="5 a.bind(b).bind(c)为什么后面绑定的是c 还没完全解决"></a>5 a.bind(b).bind(c)为什么后面绑定的是c 还没完全解决</h3><h3 id="6-promise的实现理解-这个要搞"><a href="#6-promise的实现理解-这个要搞" class="headerlink" title="6 promise的实现理解 这个要搞"></a>6 promise的实现理解 这个要搞</h3><h3 id="7-函数会返回一个默认的promise"><a href="#7-函数会返回一个默认的promise" class="headerlink" title="7 函数会返回一个默认的promise"></a>7 函数会返回一个默认的promise</h3><h3 id="8-位运算"><a href="#8-位运算" class="headerlink" title="8 位运算"></a>8 位运算</h3><p><a href="http://cn.mikecrm.com/httqqWJ" target="_blank" rel="noopener">http://cn.mikecrm.com/httqqWJ</a></p><pre><code>位运算即在比特级别进行操作的技术。使用位运算技术可以带来更快的运行速度与更小的内存使用。测试第 k 位：s &amp; (1 &lt;&lt; k);设置第k位：s |= (1 &lt;&lt; k);关闭第k位：s &amp;= ~(1 &lt;&lt; k);切换第k位：s ^= (1 &lt;&lt; k);乘以2的n方：s &lt;&lt; n;除以2的n方：s &gt;&gt; n;交集：s &amp; t;并集：s | t;减法：s &amp; ~t;提取最小非0位：s &amp; (-s);提取最小0位：~s &amp; (s + 1);交换值：x ^= y; y ^= x; x ^= y;</code></pre><h3 id="9-HTTP协议详解"><a href="#9-HTTP协议详解" class="headerlink" title="9 HTTP协议详解"></a>9 HTTP协议详解</h3><p><a href="http://blog.jobbole.com/108188/" target="_blank" rel="noopener">http://blog.jobbole.com/108188/</a></p><h3 id="10-基本类型和引用类型的区别"><a href="#10-基本类型和引用类型的区别" class="headerlink" title="10 基本类型和引用类型的区别"></a>10 基本类型和引用类型的区别</h3><h2 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h2><h3 id="二叉树序列化"><a href="#二叉树序列化" class="headerlink" title="二叉树序列化"></a>二叉树序列化</h3><p><a href="http://web.jobbole.com/94195/" target="_blank" rel="noopener">http://web.jobbole.com/94195/</a></p><h3 id="11-高并发处理"><a href="#11-高并发处理" class="headerlink" title="11 高并发处理"></a>11 高并发处理</h3><p>1、避免静态页面，与服务器交互，缓存<br>2、增加服务器资源</p><h3 id="12-权限设计"><a href="#12-权限设计" class="headerlink" title="12 权限设计"></a>12 权限设计</h3><h3 id="13-跨域"><a href="#13-跨域" class="headerlink" title="13 跨域"></a>13 跨域</h3><p>1 CORS</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;面试问题整理&lt;br&gt;
    
    </summary>
    
      <category term="面试" scheme="http://yatsov.github.io/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="面试" scheme="http://yatsov.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yatsov.github.io/hello-world.html"/>
    <id>http://yatsov.github.io/hello-world.html</id>
    <published>2018-04-21T02:32:08.480Z</published>
    <updated>2018-04-21T02:32:08.481Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
